{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.guards.ts","webpack:///./src/app/auth/auth.interceptor.ts","webpack:///./src/app/components/begin/begin.component.html","webpack:///./src/app/components/begin/begin.component.ts","webpack:///./src/app/components/begin/login/login.component.html","webpack:///./src/app/components/begin/login/login.component.ts","webpack:///./src/app/components/begin/register/register.component.html","webpack:///./src/app/components/begin/register/register.component.ts","webpack:///./src/app/components/home/admin-panel/admin-fridge/admin-fridge-detail/admin-fridge-detail.component.html","webpack:///./src/app/components/home/admin-panel/admin-fridge/admin-fridge-detail/admin-fridge-detail.component.ts","webpack:///./src/app/components/home/admin-panel/admin-fridge/admin-fridge-list/admin-fridge-list.component.html","webpack:///./src/app/components/home/admin-panel/admin-fridge/admin-fridge-list/admin-fridge-list.component.ts","webpack:///./src/app/components/home/admin-panel/admin-fridge/admin-fridge.component.html","webpack:///./src/app/components/home/admin-panel/admin-fridge/admin-fridge.component.ts","webpack:///./src/app/components/home/admin-panel/admin-panel.component.html","webpack:///./src/app/components/home/admin-panel/admin-panel.component.ts","webpack:///./src/app/components/home/admin-panel/admin-product/admin-product-detail/admin-product-detail.component.html","webpack:///./src/app/components/home/admin-panel/admin-product/admin-product-detail/admin-product-detail.component.ts","webpack:///./src/app/components/home/admin-panel/admin-product/admin-product-list/admin-product-list.component.html","webpack:///./src/app/components/home/admin-panel/admin-product/admin-product-list/admin-product-list.component.ts","webpack:///./src/app/components/home/admin-panel/admin-product/admin-product.component.html","webpack:///./src/app/components/home/admin-panel/admin-product/admin-product.component.ts","webpack:///./src/app/components/home/admin-panel/admin-user/admin-user-detail/admin-user-detail.component.html","webpack:///./src/app/components/home/admin-panel/admin-user/admin-user-detail/admin-user-detail.component.ts","webpack:///./src/app/components/home/admin-panel/admin-user/admin-user-list/admin-user-list.component.html","webpack:///./src/app/components/home/admin-panel/admin-user/admin-user-list/admin-user-list.component.ts","webpack:///./src/app/components/home/admin-panel/admin-user/admin-user.component.html","webpack:///./src/app/components/home/admin-panel/admin-user/admin-user.component.ts","webpack:///./src/app/components/home/forbidden403/forbidden403.component.html","webpack:///./src/app/components/home/forbidden403/forbidden403.component.ts","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/home/open/cart/cart-detail/cart-detail.component.html","webpack:///./src/app/components/home/open/cart/cart-detail/cart-detail.component.ts","webpack:///./src/app/components/home/open/cart/cart-list/cart-list.component.html","webpack:///./src/app/components/home/open/cart/cart-list/cart-list.component.ts","webpack:///./src/app/components/home/open/cart/cart.component.html","webpack:///./src/app/components/home/open/cart/cart.component.ts","webpack:///./src/app/components/home/open/fridge-product/fridge-product-detail/fridge-product-detail.component.html","webpack:///./src/app/components/home/open/fridge-product/fridge-product-detail/fridge-product-detail.component.ts","webpack:///./src/app/components/home/open/fridge-product/fridge-product-list/fridge-product-list.component.html","webpack:///./src/app/components/home/open/fridge-product/fridge-product-list/fridge-product-list.component.ts","webpack:///./src/app/components/home/open/fridge-product/fridge-product.component.html","webpack:///./src/app/components/home/open/fridge-product/fridge-product.component.ts","webpack:///./src/app/components/home/open/open.component.html","webpack:///./src/app/components/home/open/open.component.ts","webpack:///./src/app/components/home/open/sticker/sticker-detail/sticker-detail.component.html","webpack:///./src/app/components/home/open/sticker/sticker-detail/sticker-detail.component.ts","webpack:///./src/app/components/home/open/sticker/sticker-list/sticker-list.component.html","webpack:///./src/app/components/home/open/sticker/sticker-list/sticker-list.component.ts","webpack:///./src/app/components/home/open/sticker/sticker.component.html","webpack:///./src/app/components/home/open/sticker/sticker.component.ts","webpack:///./src/app/components/home/user-panel/user-fridge/user-fridge-add/user-fridge-add.component.html","webpack:///./src/app/components/home/user-panel/user-fridge/user-fridge-add/user-fridge-add.component.ts","webpack:///./src/app/components/home/user-panel/user-fridge/user-fridge-detail/user-fridge-detail.component.html","webpack:///./src/app/components/home/user-panel/user-fridge/user-fridge-detail/user-fridge-detail.component.ts","webpack:///./src/app/components/home/user-panel/user-fridge/user-fridge-list/user-fridge-list.component.html","webpack:///./src/app/components/home/user-panel/user-fridge/user-fridge-list/user-fridge-list.component.ts","webpack:///./src/app/components/home/user-panel/user-fridge/user-fridge.component.html","webpack:///./src/app/components/home/user-panel/user-fridge/user-fridge.component.ts","webpack:///./src/app/components/home/user-panel/user-page/user-page.component.html","webpack:///./src/app/components/home/user-panel/user-page/user-page.component.ts","webpack:///./src/app/components/home/user-panel/user-panel.component.html","webpack:///./src/app/components/home/user-panel/user-panel.component.ts","webpack:///./src/app/components/home/user-panel/user-product/user-product-detail/user-product-detail.component.html","webpack:///./src/app/components/home/user-panel/user-product/user-product-detail/user-product-detail.component.ts","webpack:///./src/app/components/home/user-panel/user-product/user-product-list/user-product-list.component.html","webpack:///./src/app/components/home/user-panel/user-product/user-product-list/user-product-list.component.ts","webpack:///./src/app/components/home/user-panel/user-product/user-product.component.html","webpack:///./src/app/components/home/user-panel/user-product/user-product.component.ts","webpack:///./src/app/services/cart.service.ts","webpack:///./src/app/services/fridge.service.ts","webpack:///./src/app/services/fridgeproduct.service.ts","webpack:///./src/app/services/product.service.ts","webpack:///./src/app/services/sticker.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/services/userfridge.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guards';\nimport { BeginComponent } from './components/begin/begin.component';\nimport { RegisterComponent } from './components/begin/register/register.component';\nimport { LoginComponent } from './components/begin/login/login.component';\nimport { HomeComponent } from './components/home/home.component'; \nimport { Forbidden403Component } from './components/home/forbidden403/forbidden403.component';\nimport { AdminPanelComponent } from './components/home/admin-panel/admin-panel.component';\nimport { AdminProductComponent } from './components/home/admin-panel/admin-product/admin-product.component';\nimport { AdminFridgeComponent } from './components/home/admin-panel/admin-fridge/admin-fridge.component';\nimport { AdminUserComponent } from './components/home/admin-panel/admin-user/admin-user.component';\nimport { AdminFridgeListComponent } from './components/home/admin-panel/admin-fridge/admin-fridge-list/admin-fridge-list.component';\n//import { AdminProductDetailComponent } from './components/home/admin-panel/admin-product/admin-product-detail/admin-product-detail.component';\n//import { AdminFridgeDetailComponent } from './components/home/admin-panel/admin-fridge/admin-fridge-detail/admin-fridge-detail.component';\nimport { AdminProductListComponent } from './components/home/admin-panel/admin-product/admin-product-list/admin-product-list.component';\n//import { AdminUserDetailComponent } from './components/home/admin-panel/admin-user/admin-user-detail/admin-user-detail.component';\nimport { AdminUserListComponent } from './components/home/admin-panel/admin-user/admin-user-list/admin-user-list.component';\nimport { UserPanelComponent } from './components/home/user-panel/user-panel.component';\nimport { UserProductComponent } from './components/home/user-panel/user-product/user-product.component';\nimport { UserProductDetailComponent } from './components/home/user-panel/user-product/user-product-detail/user-product-detail.component';\nimport { UserProductListComponent } from './components/home/user-panel/user-product/user-product-list/user-product-list.component';\nimport { UserFridgeComponent } from './components/home/user-panel/user-fridge/user-fridge.component';\nimport { UserFridgeDetailComponent } from './components/home/user-panel/user-fridge/user-fridge-detail/user-fridge-detail.component';\nimport { UserFridgeListComponent } from './components/home/user-panel/user-fridge/user-fridge-list/user-fridge-list.component';\nimport { UserPageComponent } from './components/home/user-panel/user-page/user-page.component';\nimport { UserFridgeAddComponent } from './components/home/user-panel/user-fridge/user-fridge-add/user-fridge-add.component';\nimport { OpenComponent } from './components/home/open/open.component';\nimport { FridgeProductComponent } from './components/home/open/fridge-product/fridge-product.component';\nimport { FridgeProductDetailComponent } from './components/home/open/fridge-product/fridge-product-detail/fridge-product-detail.component';\nimport { FridgeProductListComponent } from './components/home/open/fridge-product/fridge-product-list/fridge-product-list.component';\nimport { StickerComponent } from './components/home/open/sticker/sticker.component';\nimport { StickerDetailComponent } from './components/home/open/sticker/sticker-detail/sticker-detail.component';\nimport { StickerListComponent } from './components/home/open/sticker/sticker-list/sticker-list.component';\nimport { CartComponent } from './components/home/open/cart/cart.component';\nimport { CartDetailComponent } from './components/home/open/cart/cart-detail/cart-detail.component';\nimport { CartListComponent } from './components/home/open/cart/cart-list/cart-list.component';\n\n\nconst routes: Routes = \n[\n  { path:'',redirectTo:'/begin/login',pathMatch:'full'},\n  { path: 'begin', component: BeginComponent,\n    children: \n    [\n      { path: 'register', component: RegisterComponent },\n      { path: 'login', component: LoginComponent }\n    ]\n  },\n  { path:'home', component:HomeComponent,canActivate:[AuthGuard],\n    children:\n      [\n        { path:'forbidden403',component:Forbidden403Component}, \n        { path:'admin',component:AdminPanelComponent,canActivate:[AuthGuard],data :{permittedRoles:['admin']},\n          children: \n            [\n              { path: 'product', component: AdminProductComponent,\n                children: \n                [\n                  // { path: 'detail', component: AdminProductDetailComponent },\n                  { path: 'list', component: AdminProductListComponent } \n                ] \n              },\n              { path: 'fridge', component: AdminFridgeComponent,\n                children: \n                  [\n                    // { path: 'detail', component: AdminFridgeDetailComponent },\n                    { path: 'list', component: AdminFridgeListComponent } \n                  ] \n              },\n              { path: 'user', component: AdminUserComponent,\n                children: \n                  [\n                    // { path: 'detail', component: AdminUserDetailComponent },\n                    { path: 'list', component: AdminUserListComponent } \n                  ] \n              }\n            ]\n        }, \n        { path:'user',component:UserPanelComponent,canActivate:[AuthGuard],data :{permittedRoles:['user','admin']},\n            children: \n              [\n                { path: 'product', component: UserProductComponent,\n                  children: \n                  [\n                    { path: 'detail', component: UserProductDetailComponent },\n                    { path: 'list', component: UserProductListComponent } \n                  ] \n                },\n                { path: 'fridge', component: UserFridgeComponent,\n                  children: \n                    [\n                      { path: 'detail', component: UserFridgeDetailComponent },\n                      { path: 'list', component: UserFridgeListComponent },\n                      { path: 'add', component: UserFridgeAddComponent }  \n                    ] \n                },\n                { path: 'page', component: UserPageComponent} \n              ]\n        }, \n        { path:'open',component:OpenComponent,canActivate:[AuthGuard],\n          children: \n            [\n              { path: 'fridgeproduct', component: FridgeProductComponent,\n                children: \n                [\n                  { path: 'detail', component: FridgeProductDetailComponent },\n                  { path: 'list', component: FridgeProductListComponent } \n                ] \n              },\n              { path: 'sticker', component: StickerComponent,\n                children: \n                  [\n                    { path: 'detail', component: StickerDetailComponent },\n                    { path: 'list', component: StickerListComponent } \n                  ] \n              },\n              { path: 'cart', component: CartComponent,\n                children: \n                [\n                  { path: 'detail', component: CartDetailComponent },\n                  { path: 'list', component: CartListComponent } \n                ] \n              }\n            ]\n        }     \n      ]\n  }\n] \n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"circle\\\" style=\\\"width: 100%\\\"> \\n  <main role=\\\"main\\\" class=\\\"container\\\" style=\\\"width: 100%\\\">\\n    <router-outlet></router-outlet>\\n  </main>\\n</div>\\n\\n\\n\\n\\n\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Operator, Observable } from 'rxjs';\n\n// declare module 'rxjs/Subject' {\n//   interface Subject<T> {\n//     lift<R>(operator: Operator<T, R>): Observable<R>;\n//   }\n// }\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'UI';\n\n\n  \n  constructor(private router: Router){}\n  \n  onLogout() {\n    localStorage.removeItem('token');\n    this.router.navigate(['/begin/login']);\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BeginComponent } from './components/begin/begin.component';\nimport { LoginComponent } from './components/begin/login/login.component';\nimport { RegisterComponent } from './components/begin/register/register.component'; \nimport { HomeComponent } from './components/home/home.component';\nimport { Forbidden403Component } from './components/home/forbidden403/forbidden403.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { ProductService } from './services/product.service';\nimport { UserService } from './services/user.service';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { FridgeService } from './services/fridge.service';\nimport { FridgeproductService } from './services/fridgeproduct.service';\nimport { StickerService } from './services/sticker.service';\nimport { UserfridgeService } from './services/userfridge.service';\nimport { AdminPanelComponent } from './components/home/admin-panel/admin-panel.component';\nimport { AdminFridgeComponent } from './components/home/admin-panel/admin-fridge/admin-fridge.component';\nimport { AdminProductComponent } from './components/home/admin-panel/admin-product/admin-product.component';\nimport { AdminUserComponent } from './components/home/admin-panel/admin-user/admin-user.component';\nimport { AdminProductDetailComponent } from './components/home/admin-panel/admin-product/admin-product-detail/admin-product-detail.component';\nimport { AdminProductListComponent } from './components/home/admin-panel/admin-product/admin-product-list/admin-product-list.component';\nimport { AdminFridgeListComponent } from './components/home/admin-panel/admin-fridge/admin-fridge-list/admin-fridge-list.component';\nimport { AdminFridgeDetailComponent } from './components/home/admin-panel/admin-fridge/admin-fridge-detail/admin-fridge-detail.component';\nimport { AdminUserDetailComponent } from './components/home/admin-panel/admin-user/admin-user-detail/admin-user-detail.component';\nimport { AdminUserListComponent } from './components/home/admin-panel/admin-user/admin-user-list/admin-user-list.component'; \nimport { UserProductDetailComponent } from './components/home/user-panel/user-product/user-product-detail/user-product-detail.component';\nimport { UserProductListComponent } from './components/home/user-panel/user-product/user-product-list/user-product-list.component';\nimport { UserFridgeListComponent } from './components/home/user-panel/user-fridge/user-fridge-list/user-fridge-list.component';\nimport { UserFridgeComponent } from './components/home/user-panel/user-fridge/user-fridge.component';\nimport { UserProductComponent } from './components/home/user-panel/user-product/user-product.component';\nimport { UserPanelComponent } from './components/home/user-panel/user-panel.component';\nimport { UserFridgeDetailComponent } from './components/home/user-panel/user-fridge/user-fridge-detail/user-fridge-detail.component';\nimport { UserPageComponent } from './components/home/user-panel/user-page/user-page.component';\nimport { UserFridgeAddComponent } from './components/home/user-panel/user-fridge/user-fridge-add/user-fridge-add.component';\nimport { OpenComponent } from './components/home/open/open.component';\nimport { FridgeProductComponent } from './components/home/open/fridge-product/fridge-product.component';\nimport { FridgeProductDetailComponent } from './components/home/open/fridge-product/fridge-product-detail/fridge-product-detail.component';\nimport { FridgeProductListComponent } from './components/home/open/fridge-product/fridge-product-list/fridge-product-list.component';\nimport { StickerComponent } from './components/home/open/sticker/sticker.component';\nimport { StickerDetailComponent } from './components/home/open/sticker/sticker-detail/sticker-detail.component';\nimport { StickerListComponent } from './components/home/open/sticker/sticker-list/sticker-list.component';\nimport { CartComponent } from './components/home/open/cart/cart.component';\nimport { CartDetailComponent } from './components/home/open/cart/cart-detail/cart-detail.component';\nimport { CartListComponent } from './components/home/open/cart/cart-list/cart-list.component';\nimport { CartService } from './services/cart.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BeginComponent,\n    // FormsModule,\n    // ReactiveFormsModule,\n    LoginComponent,\n    RegisterComponent, \n    HomeComponent,\n    Forbidden403Component,\n    AdminPanelComponent,\n    AdminFridgeComponent,\n    AdminProductComponent,\n    AdminUserComponent,\n    AdminProductDetailComponent,\n    AdminProductListComponent,\n    AdminFridgeListComponent,\n    AdminFridgeDetailComponent,\n    AdminUserDetailComponent,\n    AdminUserListComponent, \n    UserProductDetailComponent,\n    UserProductListComponent,\n    UserFridgeListComponent,\n    UserFridgeDetailComponent,\n    UserFridgeComponent,\n    UserProductComponent,\n    UserPanelComponent,\n    UserPageComponent,\n    UserFridgeAddComponent,\n    OpenComponent,\n    FridgeProductComponent,\n    FridgeProductDetailComponent,\n    FridgeProductListComponent,\n    StickerComponent,\n    StickerDetailComponent,\n    StickerListComponent,\n    CartComponent,\n    CartDetailComponent,\n    CartListComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot({\n      progressBar: true\n    }),\n    FormsModule\n  ],\n  providers: [\n    CartService,\n    ProductService, \n    UserService, \n    FridgeService, \n    FridgeproductService, \n    StickerService, \n    UserfridgeService, \n    {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi: true\n  }\n],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n"," \r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from '../services/user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n\r\n  constructor(private router: Router,private service : UserService) {\r\n  }\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): boolean {\r\n    if (localStorage.getItem('token') != null){\r\n      let roles = next.data['permittedRoles'] as Array<string>;\r\n      if(roles){\r\n        if(this.service.roleMatch(roles)) return true;\r\n        else{\r\n          this.router.navigate(['/home/forbidden403']);\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    else {\r\n      this.router.navigate(['/begin/login']);\r\n      return false;\r\n    }\r\n\r\n  }\r\n}\r\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { tap } from \"rxjs/operators\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private router: Router) {\r\n\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (localStorage.getItem('token') != null) {\r\n            const clonedReq = req.clone({\r\n                headers: req.headers.set('Authorization', 'Bearer ' + localStorage.getItem('token'))\r\n            });\r\n            return next.handle(clonedReq).pipe(\r\n                tap(\r\n                    succ => { },\r\n                    err => {\r\n                        if (err.status == 401){\r\n                            localStorage.removeItem('token');\r\n                            this.router.navigateByUrl('/user/login');\r\n                        }\r\n                        else if(err.status == 403)\r\n                        this.router.navigateByUrl('/forbidden');\r\n                    }\r\n                )\r\n            )\r\n        }\r\n        else\r\n            return next.handle(req.clone());\r\n    }\r\n}","module.exports = \"<div class=\\\"wrapper\\\" class=\\\"col-md-6 offset-md-3\\\" style=\\\"top:20px\\\">\\n  <div class=\\\"wrapped-div\\\">\\n    <div class=\\\"tab-header\\\">\\n      <h2 routerLink='/begin/login' routerLinkActive='active'>Sign In</h2>\\n      <h2 routerLink='/begin/register' routerLinkActive='active'>Sign Up</h2>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-10 offset-md-1\\\"><br/>\\n        <router-outlet></router-outlet>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-begin',\n  templateUrl: './begin.component.html',\n  styles: []\n})\nexport class BeginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<img src=\\\"/assets/img/single_user.png\\\" class=\\\"mx-auto d-block\\\"><br>\\n<form #form='ngForm' class=\\\"mb-4\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">  \\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <div class=\\\"input-group-text bg-white\\\">\\n              <i class=\\\"fas fa-at\\\"  [class.green-icon]=\\\"UserName.valid\\\" [class.red-icon]=\\\"UserName.invalid && UserName.touched\\\"></i>\\n            </div>\\n          </div>\\n          <input name=\\\"UserName\\\" #UserName=\\\"ngModel\\\" [(ngModel)]=\\\"formModel.UserName\\\" \\n            class=\\\"form-control\\\" placeholder=\\\"Email...\\\" required maxlength=\\\"400\\\">\\n        </div>\\n      </div> \\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <div class=\\\"input-group-text bg-white\\\">\\n                <i class=\\\"fas fa-key\\\"  [class.green-icon]=\\\"Password.valid\\\" [class.red-icon]=\\\"Password.invalid && Password.touched\\\"></i>\\n              </div>\\n            </div>\\n            <input type=\\\"password\\\" name=\\\"Password\\\" #Password=\\\"ngModel\\\" [(ngModel)]=\\\"formModel.Password\\\" \\n              class=\\\"form-control\\\" placeholder=\\\"Email...\\\" required maxlength=\\\"400\\\">\\n          </div>\\n        </div> \\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"form-group col-md-8 offset-md-2\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block\\\" [disabled]=\\\"form.invalid\\\">Login</button>\\n    </div>\\n  </div>\\n</form> \"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styles: []\n})\nexport class LoginComponent implements OnInit {\n  formModel = {\n    UserName: '',\n    Password: ''\n  }\n  constructor(private service: UserService, private router: Router, private toastr: ToastrService) { }\n\n  ngOnInit() {\n    if (localStorage.getItem('token') != null)\n      this.router.navigateByUrl('/home');\n  }\n\n  onSubmit(form: NgForm) {\n    this.service.login(form.value).subscribe(\n      (res: any) => {\n        localStorage.setItem('token', res.token);\n        localStorage.setItem('role', res.role);\n        //localStorage.setItem('currentUser', res.currentUser);\n        this.router.navigateByUrl('/home');\n      },\n      err => {\n        if (err.status == 400)\n          this.toastr.error('Incorrect username or password.', 'Authentication failed.');\n        else\n          console.log(err);\n      }\n    );\n  }\n}\n","module.exports = \"<form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\"> \\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <div class=\\\"input-group-text bg-white\\\">\\n            <i class=\\\"fas fa-at\\\" [class.green-icon]=\\\"Email.valid\\\" [class.red-icon]=\\\"Email.invalid && Email.touched\\\"></i>\\n          </div>\\n        </div>\\n        <input name=\\\"Email\\\" #Email=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Email\\\" class=\\\"form-control\\\"\\n          placeholder=\\\"Email...\\\" required maxlength=\\\"400\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <div class=\\\"input-group-text bg-white\\\">\\n            <i class=\\\"fas fa-user-alt\\\"  [class.green-icon]=\\\"FullName.valid\\\" [class.red-icon]=\\\"FullName.invalid && FullName.touched\\\"></i>\\n          </div>\\n        </div>\\n        <input name=\\\"FullName\\\" #FullName=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.FullName\\\" \\n        class=\\\"form-control\\\" placeholder=\\\"FullName...\\\" required maxlength=\\\"400\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <div class=\\\"input-group-text bg-white\\\">\\n            <i class=\\\"fas fa-key\\\"  [class.green-icon]=\\\"Password.valid\\\" [class.red-icon]=\\\"Password.invalid && Password.touched\\\"></i>\\n          </div>\\n        </div>\\n        <input type=\\\"password\\\" name=\\\"Password\\\" #Password=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Password\\\" \\n        class=\\\"form-control\\\" placeholder=\\\"Password...\\\" required maxlength=\\\"400\\\">\\n      </div>\\n    </div> \\n    <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-8 offset-md-2\\\">\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\"><i class=\\\"fas fa-database\\\"></i> Sign Up</button>\\n      </div> \\n      </div> \\n    </div>\\n  </form>\\n \"","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserService } from 'src/app/services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styles: []\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private router: Router, public service: UserService, private toastr: ToastrService) { }\n\n\n  ngOnInit() {\n    this.service.resetForm();\n  }\n\n  onSubmit() {\n      this.service.register().subscribe(\n      (res: any) => {\n        if (res.succeeded) {\n          this.service.resetForm();\n          this.toastr.success('New user created!', 'Registration successful.');\n          this.router.navigate(['/begin/login']);\n        } else {\n          res.errors.forEach(element => {\n            switch (element.code) {\n              case 'DuplicateUserName':\n                this.toastr.error('Username is already taken','Registration failed.');\n                break;\n\n              default:\n              this.toastr.error(element.description,'Registration failed.');\n                break;\n            }\n          });\n        }\n      },\n      err => {\n        console.log(err);\n      }\n    ); \n  }\n\n}\n","module.exports = \"<p>\\n  admin-fridge-detail works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-fridge-detail',\n  templateUrl: './admin-fridge-detail.component.html',\n  styles: []\n})\nexport class AdminFridgeDetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div *ngIf=\\\"isLoaded\\\">\\n    <table class=\\\"table wrapped-div\\\" style=\\\"width: 100%\\\">\\n      <thead> \\n        <th>Name</th>\\n        <th>Description</th>\\n        <th>DateCreate</th>\\n        <!-- <th>Owners</th>  -->\\n        <th><i class=\\\"fas fa-cogs\\\"></i></th>\\n      </thead>\\n      <tr *ngFor=\\\"let pd of _service.list\\\"> \\n        <td >{{pd.Name}}</td>\\n        <td >{{pd.Description}}</td>\\n        <td >{{pd.DateCreate}}</td>\\n        <!-- <td >\\n          <p *ngFor=\\\"let user of pd.Users\\\">{{user.Fullname}}</p>\\n        </td>  -->\\n        <td>\\n          <i class=\\\"far fa-trash-alt fa-lg text-danger\\\" (click)=\\\"onDelete(pd.Id)\\\"></i> | <i class=\\\"fas fa-door-open\\\" (click)=\\\"onOpen(pd.Id)\\\"></i>\\n        </td>\\n      </tr>\\n    </table>\\n  </div>\\n  <div *ngIf=\\\"!isLoaded\\\" class=\\\"text-center\\\">\\n    <img src=\\\"https://upload.wikimedia.org/wikipedia/commons/a/a3/Lightness_rotate_36f_cw.gif\\\" style=\\\"max-height: 70px; max-width: 70px\\\"/>\\n  </div>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { UserDetail } from 'src/app/models/UserDetail';\nimport { FridgeService } from 'src/app/services/fridge.service';\nimport { UserfridgeService } from 'src/app/services/userfridge.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\nimport { Fridge } from 'src/app/models/Fridge';\n\n@Component({\n  selector: 'app-admin-fridge-list',\n  templateUrl: './admin-fridge-list.component.html',\n  styles: []\n})\nexport class AdminFridgeListComponent implements OnInit {\n\n  public isLoaded: boolean = false;\n  public userDetails: UserDetail; \n  public _service: FridgeService;\n  public _serviceUserFridge: UserfridgeService;\n  private _toastrService: ToastrService;\n\n  constructor(private router: Router,\n    service: FridgeService,\n    service2: UserfridgeService,\n    toastr: ToastrService,\n    private userService: UserService) {\n    this._service = service;\n    this._serviceUserFridge = service2;\n    this._toastrService = toastr;\n   }  \n\n  ngOnInit() { \n    this._service.refreshListGeneral();\n    this.userService.getUserProfile().subscribe(\n      res => {\n        this.userDetails = res as UserDetail; \n      },\n      err => {\n        console.log(err);\n      },\n    );\n    this.isLoaded=true;\n  } \n\n  onDelete(Id){\n    if (confirm('Are you sure?')) {\n      this.isLoaded=false;\n      this._serviceUserFridge.deleteUserFridgeDetail(Id).subscribe(\n      res=>{ \n        this._toastrService.warning('Submitted (delete) successfully', 'Fridge Detail Register');\n        this._service.refreshListGeneral();\n      },\n      err=>{\n        console.log(err);\n      }\n    )}\n    this.isLoaded=true;\n  }\n  \n  onOpen(Id){\n    localStorage.setItem(\"fridgeId\",Id);\n    this.router.navigate(['/home/open']);\n  }\n}\n","module.exports = \"<div class=\\\"wrapper\\\">\\n  <div class=\\\"wrapped-div\\\">\\n    <div class=\\\"tab-header\\\">\\n      <!-- <h2 routerLink='/home/admin/fridge/detail' routerLinkActive='active'>FridgeDetail</h2> -->\\n      <h2 routerLink='/home/admin/fridge/list' routerLinkActive='active'>FridgeList</h2>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-10 offset-md-1\\\">\\n        <router-outlet></router-outlet>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-fridge',\n  templateUrl: './admin-fridge.component.html',\n  styles: []\n})\nexport class AdminFridgeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"wrapper\\\">\\n  <div class=\\\"wrapped-div\\\">\\n    <div class=\\\"tab-header\\\">\\n      <h2 routerLink='/home/admin/fridge' routerLinkActive='active'>Fridges</h2>\\n      <h2 routerLink='/home/admin/product' routerLinkActive='active'>Products</h2>\\n      <h2 routerLink='/home/admin/user' routerLinkActive='active'>Users</h2>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-10 offset-md-1\\\">\\n        <router-outlet></router-outlet>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styles: []\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<p>\\n  admin-product-detail works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-product-detail',\n  templateUrl: './admin-product-detail.component.html',\n  styles: []\n})\nexport class AdminProductDetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div *ngIf=\\\"isLoaded\\\">\\n    <table class=\\\"table wrapped-div\\\" style=\\\"width: 100%\\\">\\n      <thead>\\n        <th>Image</th>\\n        <th>Name</th>\\n        <th>Description</th>\\n        <th>p/f/c</th>\\n        <th>Kkal</th>\\n        <th><i class=\\\"fas fa-cogs\\\"></i></th>\\n      </thead>\\n      <tr *ngFor=\\\"let pd of _service.list\\\">\\n        <td >      \\n            <img *ngIf=\\\"pd.ImgURL==''\\\" src=\\\"https://www.diamondbathrooms.com/sites/default/files/default_images/no_image_available.png\\\" style=\\\"max-height: 75px; max-width: 75px; opacity:0.3\\\"/>\\n            <img *ngIf=\\\"pd.ImgURL!=''\\\" src=\\\"{{pd.ImgURL}}\\\" style=\\\"max-height: 75px; max-width: 75px\\\"></td>\\n        <td >{{pd.Name}}</td>\\n        <td >{{pd.Description}}</td>\\n        <td >{{pd.ProdInfo.Protein}} / {{pd.ProdInfo.Fat}} / {{pd.ProdInfo.Carb}} </td>\\n        <td >{{pd.ProdInfo.Kkal}}</td>\\n        <td>\\n          <i class=\\\"far fa-trash-alt fa-lg text-danger\\\" (click)=\\\"onDelete(pd.Id)\\\"></i> \\n        </td>\\n      </tr>\\n    </table>\\n  </div>\\n  <div *ngIf=\\\"!isLoaded\\\" class=\\\"text-center\\\">\\n    <img src=\\\"https://upload.wikimedia.org/wikipedia/commons/a/a3/Lightness_rotate_36f_cw.gif\\\" style=\\\"max-height: 70px; max-width: 70px\\\"/>\\n  </div>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { UserDetail } from 'src/app/models/UserDetail';\nimport { ProductService } from 'src/app/services/product.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\nimport { Product } from 'src/app/models/Product';\n\n@Component({\n  selector: 'app-admin-product-list',\n  templateUrl: './admin-product-list.component.html',\n  styles: []\n})\nexport class AdminProductListComponent implements OnInit {\n\n  public isLoaded: boolean = false;\n  public userDetails: UserDetail; \n  public _service: ProductService;\n  private _toastrService: ToastrService;\n\n  constructor(private router: Router,\n    service: ProductService,\n    toastr: ToastrService,\n    private userService: UserService) {\n    this._service = service;\n    this._toastrService = toastr;\n   }  \n\n  ngOnInit() { \n    this._service.refreshListGeneral();\n    this.userService.getUserProfile().subscribe(\n      res => {\n        this.userDetails = res as UserDetail; \n      },\n      err => {\n        console.log(err);\n      },\n    );\n    this.isLoaded=true;\n  }\n\n  populateForm(pd:Product){\n    this._service.formData = Object.assign({},pd);\n  }\n\n  onDelete(PMId){\n    if (confirm('Are you sure?')) {\n      this.isLoaded=false;\n      this._service.deleteProductDetail(PMId).subscribe(\n      res=>{ \n        this._toastrService.warning('Submitted (delete) successfully', 'Product General Detail Register');\n        this._service.refreshListGeneral();\n      },\n      err=>{\n        console.log(err);\n      }\n    )}\n    this.isLoaded=true;\n  }\n}\n","module.exports = \"<div class=\\\"wrapper\\\">\\n  <div class=\\\"wrapped-div\\\">\\n    <div class=\\\"tab-header\\\">\\n      <!-- <h2 routerLink='/home/admin/product/detail' routerLinkActive='active'>ProductDetail</h2> -->\\n      <h2 routerLink='/home/admin/product/list' routerLinkActive='active'>ProductList</h2>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-10 offset-md-1\\\">\\n        <router-outlet></router-outlet>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-product',\n  templateUrl: './admin-product.component.html',\n  styles: []\n})\nexport class AdminProductComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<p>\\n  admin-user-detail works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-user-detail',\n  templateUrl: './admin-user-detail.component.html',\n  styles: []\n})\nexport class AdminUserDetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div *ngIf=\\\"isLoaded\\\">\\n    <table class=\\\"table wrapped-div\\\" style=\\\"width: 100%\\\">\\n      <thead> \\n        <th>Id</th>\\n        <th>Email</th>\\n        <th>FullName</th>\\n        <th>Role</th>  \\n      </thead>\\n      <tr *ngFor=\\\"let pd of userService.list\\\"> \\n        <td >{{pd.Id}}</td>\\n        <td >{{pd.Email}}</td>\\n        <td >{{pd.FullName}}</td>\\n        <td >{{pd.Role}}</td>  \\n      </tr>\\n    </table>\\n  </div>\\n  <div *ngIf=\\\"!isLoaded\\\" class=\\\"text-center\\\">\\n    <img src=\\\"https://upload.wikimedia.org/wikipedia/commons/a/a3/Lightness_rotate_36f_cw.gif\\\" style=\\\"max-height: 70px; max-width: 70px\\\"/>\\n  </div>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { UserDetail } from 'src/app/models/UserDetail';\nimport { FridgeService } from 'src/app/services/fridge.service';\nimport { UserfridgeService } from 'src/app/services/userfridge.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\nimport { Fridge } from 'src/app/models/Fridge';\n\n@Component({\n  selector: 'app-admin-user-list',\n  templateUrl: './admin-user-list.component.html',\n  styles: []\n})\nexport class AdminUserListComponent implements OnInit {\n\n  public isLoaded: boolean = false;\n  public userDetails: UserDetail;  \n  private _toastrService: ToastrService;\n\n  constructor(private router: Router, \n    toastr: ToastrService,\n    public userService: UserService) { \n    this._toastrService = toastr;\n   }  \n\n  ngOnInit() { \n    this.userService.refreshList();\n    this.userService.getUserProfile().subscribe(\n      res => {\n        this.userDetails = res as UserDetail; \n      },\n      err => {\n        console.log(err);\n      },\n    );\n    this.isLoaded=true;\n  } \n\n  // onDelete(Id){\n  //   if (confirm('Are you sure?')) {\n  //     this.isLoaded=false;\n  //     this.userService.deleteUserDetail(Id).subscribe(\n  //     res=>{ \n  //       this._toastrService.warning('Submitted (delete) successfully', 'Fridge Detail Register');\n  //       this.userService.refreshList();\n  //     },\n  //     err=>{\n  //       console.log(err);\n  //     }\n  //   )}\n  //   this.isLoaded=true;\n  // }\n   \n}\n","module.exports = \"<div class=\\\"wrapper\\\">\\n  <div class=\\\"wrapped-div\\\">\\n    <div class=\\\"tab-header\\\">\\n      <!-- <h2 routerLink='/home/admin/user/detail' routerLinkActive='active'>UserDetail</h2> -->\\n      <h2 routerLink='/home/admin/user/list' routerLinkActive='active'>UserList</h2>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-10 offset-md-1\\\">\\n        <router-outlet></router-outlet>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-user',\n  templateUrl: './admin-user.component.html',\n  styles: []\n})\nexport class AdminUserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"row text-center\\\" style=\\\"background-color: transparent\\\">\\n  <div class=\\\"col s6 offset-s3\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-image\\\">\\n        <img src=\\\"/assets/img/403.png\\\" style=\\\"height:300px;width:300px;\\\">\\n\\n      </div>\\n      <div class=\\\"card-content\\\">\\n        <span class=\\\"card-title\\\" style=\\\"color:#039be5\\\">403 - ACCESS DENIED</span>\\n        <p>You don't have the permission to access this resource.</p>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forbidden403',\n  templateUrl: './forbidden403.component.html',\n  styles: []\n})\nexport class Forbidden403Component implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark mynav-cirlce\\\" style=\\\"width: 100%; border-top-left-radius: 0%; border-top-right-radius: 0%\\\">\\n  <a class=\\\"navbar-brand text-white\\\" routerLink='/home/user/page' routerLinkActive='active'><img src=\\\"https://image.flaticon.com/icons/png/512/823/823231.png\\\" style=\\\"max-height: 50px; max-width: 75px\\\">FridgeKeyApp</a>\\n  <!-- <ul class=\\\"navbar-nav mr-auto\\\">\\n    <li class=\\\"nav-item\\\" *ngIf=\\\"isAdmin\\\">\\n      <a class=\\\"nav-link\\\" routerLink=\\\"/home/admin\\\">Admin Panel</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" routerLink=\\\"/home/user\\\">User Panel</a>\\n    </li> \\n  </ul> -->\\n  <button class=\\\"btn btn-danger my-2 my-sm-0\\\" (click)=\\\"onLogout()\\\">Logout</button>\\n</nav>\\n<!-- \\n<div class=\\\"card m-5\\\" style=\\\"width:24rem\\\" *ngIf=\\\"userDetails\\\">\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\"><strong>Id : </strong>{{userDetails.Id}}</li>\\n    <li class=\\\"list-group-item\\\"><strong>FullName : </strong>{{userDetails.FullName}}</li>\\n    <li class=\\\"list-group-item\\\"><strong>Email : </strong>{{userDetails.Email}}</li>\\n    <li class=\\\"list-group-item\\\"><strong>Role : </strong>{{userDetails.Role}}</li> \\n  </ul>\\n</div>\\n<br/> -->\\n\\n<div class=\\\"wrapper\\\">\\n  <div class=\\\"wrapped-div\\\">\\n    <div class=\\\"tab-header\\\">\\n      <h2 *ngIf=\\\"isAdmin\\\" routerLink='/home/admin' routerLinkActive='active'>Admin Panel</h2>\\n      <h2 routerLink='/home/user' routerLinkActive='active'>User Panel</h2>\\n      <h2 *ngIf=\\\"isFridge\\\" routerLink='/home/open' routerLinkActive='active'>Open Fridge</h2>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div style=\\\"width: 100%\\\">\\n        <router-outlet></router-outlet>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserDetail } from 'src/app/models/UserDetail';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service'; \n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styles: []\n})\nexport class HomeComponent implements OnInit {\n\n  isFridge = false;\n  userDetails: UserDetail; \n  isAdmin = false;\n\n  constructor(private router: Router, private service: UserService) { }\n\n  ngOnInit() {\n\n    if (localStorage.getItem('fridgeId') != null)\n    {\n      this.isFridge = true;\n    }\n    this.service.getUserProfile().subscribe(\n      res => {\n        this.userDetails = res as UserDetail;\n    if (this.userDetails.Role==\"admin\") {\n      this.isAdmin=true;\n    }\n    else{\n      this.isAdmin=false;\n    }\n      },\n      err => {\n        console.log(err);\n      },\n    );\n  }\n\n  onLogout() {\n    localStorage.removeItem('token'); \n    localStorage.removeItem('role');  \n    localStorage.removeItem('fridgeId'); \n    //localStorage.removeItem('currentUser');\n    this.router.navigate(['/begin/login']);\n  }\n}\n","module.exports = \"<form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\n    <input type=\\\"hidden\\\" name=\\\"PMId\\\" [value]=\\\"_service.formData.Id\\\"> \\n    <input type=\\\"hidden\\\" name=\\\"User\\\" [value]=\\\"_service.formData.User\\\"> \\n    <input type=\\\"hidden\\\" name=\\\"Fridge\\\" [value]=\\\"_service.formData.Fridge\\\"> \\n    <input type=\\\"hidden\\\" name=\\\"Product\\\" [value]=\\\"_service.formData.Product\\\"> \\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <div class=\\\"input-group-text bg-white\\\">\\n            <i class=\\\"fas fa-hamburger\\\" [class.green-icon]=\\\"Name.valid\\\" [class.red-icon]=\\\"Name.invalid && Name.touched\\\"></i>\\n          </div>\\n        </div>\\n        <!-- <select id=\\\"select_product\\\" required name=\\\"Name\\\" #Name=\\\"ngModel\\\" [(ngModel)]=\\\"_service.formData.Product.Name\\\" class=\\\"form-control\\\" placeholder=\\\"Name...\\\">\\n          <option *ngFor=\\\"prod of products\\\" [value]=\\\"_service.formData.Product\\\">{{product.Name}}</option>\\n        </select> -->\\n        <input name=\\\"Name\\\" #Name=\\\"ngModel\\\" [(ngModel)]=\\\"_service.formData.Product.Name\\\" class=\\\"form-control\\\"\\n          placeholder=\\\"Name...\\\" required maxlength=\\\"400\\\">\\n      </div>\\n    </div>  \\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <div class=\\\"input-group-text bg-white\\\">\\n            <i class=\\\"fas fa-hamburger\\\" [class.green-icon]=\\\"Description.valid\\\" [class.red-icon]=\\\"Description.invalid && Description.touched\\\"></i>\\n          </div>\\n        </div> \\n        <input name=\\\"Description\\\" #Description=\\\"ngModel\\\" [(ngModel)]=\\\"_service.formData.Description\\\" class=\\\"form-control\\\"\\n          placeholder=\\\"Description...\\\" required maxlength=\\\"400\\\">\\n      </div>\\n    </div> \\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-md-8\\\">\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <div class=\\\"input-group-text bg-white\\\">\\n              <i class=\\\"fas fa-fire-alt\\\"  [class.green-icon]=\\\"Amount.valid\\\" [class.red-icon]=\\\"Amount.invalid && Amount.touched\\\"></i>\\n            </div>\\n          </div>\\n          <input name=\\\"Amount\\\" #Amount=\\\"ngModel\\\" [(ngModel)]=\\\"_service.formData.Amount\\\" class=\\\"form-control\\\" \\n            placeholder=\\\"Amount...\\\" required >\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col-md-4\\\">\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <div class=\\\"input-group-text bg-white\\\">\\n              <i class=\\\"fas fa-key\\\"  [class.green-icon]=\\\"EI.valid\\\" [class.red-icon]=\\\"EI.invalid && EI.touched\\\"></i>\\n            </div>\\n          </div>\\n          <input name=\\\"EI\\\" #EI=\\\"ngModel\\\" [(ngModel)]=\\\"_service.formData.EI\\\" class=\\\"form-control\\\" \\n            placeholder=\\\"EI...\\\" required >\\n        </div>\\n      </div>  \\n    </div>\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\"><i class=\\\"fas fa-database\\\"></i> Submit Form Data</button> \\n        <button class=\\\"btn btn-lg btn-block\\\" type=\\\"button\\\" (onClick)=\\\"resetForm(form)\\\" style=\\\"background-color: slategray; border-radius: 20px; color:#ffff\\\"><i class=\\\"fas fa-database\\\"></i> Clear</button>\\n      </div>\\n  </form>\"","import { Component, OnInit } from '@angular/core';\nimport { UserDetail } from 'src/app/models/UserDetail';\nimport { CartService } from 'src/app/services/cart.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Product } from 'src/app/models/Product';\nimport { Router } from '@angular/router';\nimport { ProductService } from 'src/app/services/product.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-cart-detail',\n  templateUrl: './cart-detail.component.html',\n  styles: []\n})\nexport class CartDetailComponent implements OnInit {\n\n  public fridgeId: number;\n  public userDetails: UserDetail; \n  public _service: CartService;\n  private _toastrService: ToastrService;\n  public products: Product[];\n\n  constructor(private router: Router,\n    service: CartService,\n    toastr: ToastrService,\n    private prodService: ProductService,\n    private userService: UserService) {\n    this._service = service;\n    this._toastrService = toastr;\n   }  \n\n  ngOnInit() {\n    this.fridgeId = parseInt(localStorage.getItem(\"fridgeId\"));\n    this.resetForm();\n    this.userService.getUserProfile().subscribe(\n      res => {\n        this.userDetails = res as UserDetail; \n      },\n      err => {\n        console.log(err);\n      },\n    );\n    this.prodService.refreshList();\n    this.products = this.prodService.list;\n  }\n\n  onSubmit(form: NgForm) {\n    if (this._service.formData.Id==0) this.insertRecord(form);  \n    else this.updateRecord(form);\n  } \n\n  insertRecord(form: NgForm){\n    this._service.postCartDetail().subscribe(\n      res=>{\n        this.resetForm(form);\n        this._toastrService.success('Submitted (post) successfully', 'Product Detail Register');\n        this._service.refreshList(this.fridgeId);\n      },\n      err=>{\n        console.log(err);\n      }\n    )\n  }\n\n  updateRecord(form: NgForm){\n    this._service.putCartDetail().subscribe(\n      res=>{\n        this.resetForm(form);\n        this._toastrService.info('Submitted (put) successfully', 'Product Detail Register');\n        this._service.refreshList(this.fridgeId);\n      },\n      err=>{\n        console.log(err);\n      }\n    )\n  }\n\n  resetForm(form?:NgForm){\n    if (form!=null) form.resetForm();\n    this._service.resetForm();\n  }\n\n\n}\n","module.exports = \"<div *ngIf=\\\"isLoaded\\\">\\n    <table class=\\\"table wrapped-div\\\" style=\\\"width: 100%\\\">\\n      <thead>\\n        <th>Image</th>\\n        <th>Name</th>\\n        <th>Description</th>\\n        <th>Amount</th> \\n        <th><i class=\\\"fas fa-cogs\\\"></i></th>\\n      </thead>\\n      <tr *ngFor=\\\"let pd of _service.list\\\">\\n        <td (click)=\\\"populateForm(pd)\\\">      \\n            <img *ngIf=\\\"pd.Product.ImgURL==''\\\" src=\\\"https://www.diamondbathrooms.com/sites/default/files/default_images/no_image_available.png\\\" style=\\\"max-height: 75px; max-width: 75px; opacity:0.3\\\"/>\\n            <img *ngIf=\\\"pd.Product.ImgURL!=''\\\" src=\\\"{{pd.Product.ImgURL}}\\\" style=\\\"max-height: 75px; max-width: 75px\\\"></td>\\n        <td (click)=\\\"populateForm(pd)\\\">{{pd.Product.Name}}</td>\\n        <td (click)=\\\"populateForm(pd)\\\">{{pd.Description}}</td>\\n        <td (click)=\\\"populateForm(pd)\\\">{{pd.Amount}} {{pd.EI}} </td> \\n        <td>\\n          <i *ngIf=\\\"pd.User.Id==userDetails.Id\\\" class=\\\"far fa-trash-alt fa-lg text-danger\\\" (click)=\\\"onDelete(pd.Id)\\\"></i>\\n          <i *ngIf=\\\"pd.User.Id!=userDetails.Id\\\" class=\\\"far fa-trash-alt fa-lg text-danger\\\" style=\\\"opacity: 0.3\\\"></i>\\n        </td>\\n      </tr>\\n    </table>\\n  </div>\\n  <div *ngIf=\\\"!isLoaded\\\" class=\\\"text-center\\\">\\n    <img src=\\\"https://upload.wikimedia.org/wikipedia/commons/a/a3/Lightness_rotate_36f_cw.gif\\\" style=\\\"max-height: 70px; max-width: 70px\\\"/>\\n  </div>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { UserDetail } from 'src/app/models/UserDetail';\nimport { CartService } from 'src/app/services/cart.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\nimport { Cart } from 'src/app/models/Cart';\n\n@Component({\n  selector: 'app-cart-list',\n  templateUrl: './cart-list.component.html',\n  styles: []\n})\nexport class CartListComponent implements OnInit {\n\n  public today: Date;\n  public fridgeId: number;\n  public isLoaded: boolean = false;\n  public userDetails: UserDetail; \n  public _service: CartService;\n  private _toastrService: ToastrService;\n\n  constructor(private router: Router,\n    service: CartService,\n    toastr: ToastrService,\n    private userService: UserService) {\n    this._service = service;\n    this._toastrService = toastr;\n   }  \n\n  ngOnInit() { \n    //this.today = ??? \n    this.fridgeId = parseInt(localStorage.getItem(\"fridgeId\"));\n    this._service.refreshList(this.fridgeId);\n    this.userService.getUserProfile().subscribe(\n      res => {\n        this.userDetails = res as UserDetail; \n      },\n      err => {\n        console.log(err);\n      },\n    );\n    this.isLoaded=true;\n  }\n\n  populateForm(pd:Cart){\n    this._service.formData = Object.assign({},pd);\n  }\n\n  onDelete(PMId){\n    if (confirm('Are you sure?')) {\n      this.isLoaded=false;\n      this._service.deleteCartDetail(PMId).subscribe(\n      res=>{ \n        this._toastrService.warning('Submitted (delete) successfully', 'Cart Detail Register');\n        this._service.refreshList(this.fridgeId);\n      },\n      err=>{\n        console.log(err);\n      }\n    )}\n    this.isLoaded=true;\n  }\n}\n","module.exports = \"<div class=\\\"wrapper\\\">\\n    <h1 class=\\\"display-4 text-center\\\">Shopping Cart Detail Register</h1>\\n    <hr>\\n    <div clas=\\\"row\\\"></div>\\n    <div class=\\\"wrapped-div\\\"><br/>\\n      <app-cart-detail></app-cart-detail>\\n      </div><br/>\\n    <div class=\\\"wrapped-div\\\" style=\\\"width: 100%\\\">\\n      <app-cart-list></app-cart-list>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styles: []\n})\nexport class CartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\n    <input type=\\\"hidden\\\" name=\\\"PMId\\\" [value]=\\\"_service.formData.Id\\\">\\n    <input type=\\\"hidden\\\" name=\\\"DateBuy\\\" [value]=\\\"_service.formData.DateBuy\\\"> \\n    <input type=\\\"hidden\\\" name=\\\"User\\\" [value]=\\\"_service.formData.User\\\"> \\n    <input type=\\\"hidden\\\" name=\\\"Fridge\\\" [value]=\\\"_service.formData.Fridge\\\"> \\n    <input type=\\\"hidden\\\" name=\\\"Product\\\" [value]=\\\"_service.formData.Product\\\"> \\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <div class=\\\"input-group-text bg-white\\\">\\n            <i class=\\\"fas fa-hamburger\\\" [class.green-icon]=\\\"Name.valid\\\" [class.red-icon]=\\\"Name.invalid && Name.touched\\\"></i>\\n          </div>\\n        </div>\\n        <!-- <select id=\\\"select_product\\\" required name=\\\"Name\\\" #Name=\\\"ngModel\\\" [(ngModel)]=\\\"_service.formData.Product.Name\\\" class=\\\"form-control\\\" placeholder=\\\"Name...\\\">\\n          <option *ngFor=\\\"product of products\\\" value=\\\"{{product.Name}}\\\">{{product.Name}}</option>\\n        </select> -->\\n        <input name=\\\"Name\\\" #Name=\\\"ngModel\\\" [(ngModel)]=\\\"_service.formData.Product.Name\\\" class=\\\"form-control\\\"\\n          placeholder=\\\"Name...\\\" required maxlength=\\\"400\\\">\\n      </div>\\n    </div>  \\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <div class=\\\"input-group-text bg-white\\\">\\n            <i class=\\\"fas fa-hamburger\\\" [class.green-icon]=\\\"Description.valid\\\" [class.red-icon]=\\\"Description.invalid && Description.touched\\\"></i>\\n          </div>\\n        </div> \\n        <input name=\\\"Description\\\" #Description=\\\"ngModel\\\" [(ngModel)]=\\\"_service.formData.Description\\\" class=\\\"form-control\\\"\\n          placeholder=\\\"Description...\\\" required maxlength=\\\"400\\\">\\n      </div>\\n    </div>  \\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-md-4\\\">\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <div class=\\\"input-group-text bg-white\\\">\\n              <i class=\\\"fas fa-fire-alt\\\"  [class.green-icon]=\\\"Amount.valid\\\" [class.red-icon]=\\\"Amount.invalid && Amount.touched\\\"></i>\\n            </div>\\n          </div>\\n          <input name=\\\"Amount\\\" #Amount=\\\"ngModel\\\" [(ngModel)]=\\\"_service.formData.Amount\\\" class=\\\"form-control\\\" \\n            placeholder=\\\"Amount...\\\" required >\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col-md-4\\\">\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <div class=\\\"input-group-text bg-white\\\">\\n              <i class=\\\"fas fa-key\\\"  [class.green-icon]=\\\"EI.valid\\\" [class.red-icon]=\\\"EI.invalid && EI.touched\\\"></i>\\n            </div>\\n          </div>\\n          <input name=\\\"EI\\\" #EI=\\\"ngModel\\\" [(ngModel)]=\\\"_service.formData.EI\\\" class=\\\"form-control\\\" \\n            placeholder=\\\"EI...\\\" required >\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col-md-4\\\">\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <div class=\\\"input-group-text bg-white\\\">\\n              <i class=\\\"fas fa-key\\\"  [class.green-icon]=\\\"Price.valid\\\" [class.red-icon]=\\\"Price.invalid && Price.touched\\\"></i>\\n            </div>\\n          </div>\\n          <input name=\\\"Price\\\" #Price=\\\"ngModel\\\" [(ngModel)]=\\\"_service.formData.Price\\\" class=\\\"form-control\\\" \\n            placeholder=\\\"Price...\\\" required >\\n        </div>\\n      </div> \\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <div class=\\\"input-group-text bg-white\\\">\\n              <i class=\\\"fas fa-hamburger\\\" [class.green-icon]=\\\"DateValid.valid\\\" [class.red-icon]=\\\"DateValid.invalid && DateValid.touched\\\"></i>\\n            </div>\\n          </div>\\n          <!-- <select id=\\\"select_product\\\" required name=\\\"Name\\\" #Name=\\\"ngModel\\\" [(ngModel)]=\\\"_service.formData.Product.Name\\\" class=\\\"form-control\\\" placeholder=\\\"Name...\\\">\\n            <option *ngFor=\\\"product of products\\\" value=\\\"{{product.Name}}\\\">{{product.Name}}</option>\\n          </select> -->\\n          <input name=\\\"DateValid\\\" #DateValid=\\\"ngModel\\\" [(ngModel)]=\\\"_service.formData.DateValid\\\" class=\\\"form-control\\\"\\n            placeholder=\\\"DateValid...\\\" >\\n        </div>\\n      </div>\\n    <div>\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\"><i class=\\\"fas fa-database\\\"></i> Submit Form Data</button> \\n        <button class=\\\"btn btn-lg btn-block\\\" type=\\\"button\\\" (onClick)=\\\"resetForm(form)\\\" style=\\\"background-color: slategray; border-radius: 20px; color:#ffff\\\"><i class=\\\"fas fa-database\\\"></i> Clear</button>\\n      </div>\\n    </div>\\n  </form>\"","import { Component, OnInit } from '@angular/core';\nimport { UserDetail } from 'src/app/models/UserDetail';\nimport { FridgeproductService } from 'src/app/services/fridgeproduct.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\nimport { NgForm } from '@angular/forms';\nimport { ProductService } from 'src/app/services/product.service';\nimport { Product } from 'src/app/models/Product';\n\n@Component({\n  selector: 'app-fridge-product-detail',\n  templateUrl: './fridge-product-detail.component.html',\n  styles: []\n})\nexport class FridgeProductDetailComponent implements OnInit {\n\n  public fridgeId: number;\n  public userDetails: UserDetail; \n  public _service: FridgeproductService;\n  private _toastrService: ToastrService;\n  public products: Product[];\n\n  constructor(private router: Router,\n    service: FridgeproductService,\n    toastr: ToastrService,\n    private prodService: ProductService,\n    private userService: UserService) {\n    this._service = service;\n    this._toastrService = toastr;\n   }  \n\n  ngOnInit() {\n    this.fridgeId = parseInt(localStorage.getItem(\"fridgeId\"));\n    this.resetForm();\n    this.userService.getUserProfile().subscribe(\n      res => {\n        this.userDetails = res as UserDetail; \n      },\n      err => {\n        console.log(err);\n      },\n    );\n    this.prodService.refreshList();\n    this.products = this.prodService.list;\n  }\n\n  onSubmit(form: NgForm) {\n    this._service.formData.Fridge.Id=this.fridgeId; \n    if (this._service.formData.Id==0) this.insertRecord(form);  \n    else this.updateRecord(form);\n  } \n\n  insertRecord(form: NgForm){\n    this._service.postFridgeProductDetail().subscribe(\n      res=>{\n        this.resetForm(form);\n        this._toastrService.success('Submitted (post) successfully', 'Product Detail Register');\n        this._service.refreshList(this.fridgeId);\n      },\n      err=>{\n        console.log(err);\n      }\n    )\n  }\n\n  updateRecord(form: NgForm){\n    this._service.putFridgeProductDetail().subscribe(\n      res=>{\n        this.resetForm(form);\n        this._toastrService.info('Submitted (put) successfully', 'Product Detail Register');\n        this._service.refreshList(this.fridgeId);\n      },\n      err=>{\n        console.log(err);\n      }\n    )\n  }\n\n  resetForm(form?:NgForm){\n    if (form!=null) form.resetForm();\n    this._service.resetForm();\n  }\n\n\n}\n","module.exports = \"<div *ngIf=\\\"isLoaded\\\">\\n    <table class=\\\"table wrapped-div\\\" style=\\\"width: 100%\\\">\\n      <thead>\\n        <th>Image</th>\\n        <th>Name</th>\\n        <th>Description</th>\\n        <th>Amount</th>\\n        <th>Price</th>\\n        <th>DateBuy</th>\\n        <th>DateValid</th>\\n        <th><i class=\\\"fas fa-cogs\\\"></i></th>\\n      </thead>\\n      <tr *ngFor=\\\"let pd of _service.list\\\">\\n        <td (click)=\\\"populateForm(pd)\\\">      \\n            <img *ngIf=\\\"pd.Product.ImgURL==''\\\" src=\\\"https://www.diamondbathrooms.com/sites/default/files/default_images/no_image_available.png\\\" style=\\\"max-height: 75px; max-width: 75px; opacity:0.3\\\"/>\\n            <img *ngIf=\\\"pd.Product.ImgURL!=''\\\" src=\\\"{{pd.Product.ImgURL}}\\\" style=\\\"max-height: 75px; max-width: 75px\\\"></td>\\n        <td (click)=\\\"populateForm(pd)\\\">{{pd.Product.Name}}</td>\\n        <td (click)=\\\"populateForm(pd)\\\">{{pd.Description}}</td>\\n        <td (click)=\\\"populateForm(pd)\\\">{{pd.Amount}} {{pd.EI}} </td>\\n        <td (click)=\\\"populateForm(pd)\\\">{{pd.Price}}</td>\\n        <td (click)=\\\"populateForm(pd)\\\">{{pd.DateBuy}}</td>\\n        <td (click)=\\\"populateForm(pd)\\\">{{pd.DateValid}}</td>\\n        <td>\\n          <i *ngIf=\\\"pd.User.Id==userDetails.Id\\\" class=\\\"far fa-trash-alt fa-lg text-danger\\\" (click)=\\\"onDelete(pd.Id)\\\"></i>\\n          <i *ngIf=\\\"pd.User.Id!=userDetails.Id\\\" class=\\\"far fa-trash-alt fa-lg text-danger\\\" style=\\\"opacity: 0.3\\\"></i>\\n        </td>\\n      </tr>\\n    </table>\\n  </div>\\n  <div *ngIf=\\\"!isLoaded\\\" class=\\\"text-center\\\">\\n    <img src=\\\"https://upload.wikimedia.org/wikipedia/commons/a/a3/Lightness_rotate_36f_cw.gif\\\" style=\\\"max-height: 70px; max-width: 70px\\\"/>\\n  </div>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { UserDetail } from 'src/app/models/UserDetail';\nimport { FridgeproductService } from 'src/app/services/fridgeproduct.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\nimport { FridgeProduct } from 'src/app/models/FridgeProduct';\n\n@Component({\n  selector: 'app-fridge-product-list',\n  templateUrl: './fridge-product-list.component.html',\n  styles: []\n})\nexport class FridgeProductListComponent implements OnInit {\n\n  public today: Date;\n  public fridgeId: number;\n  public isLoaded: boolean = false;\n  public userDetails: UserDetail; \n  public _service: FridgeproductService;\n  private _toastrService: ToastrService;\n\n  constructor(private router: Router,\n    service: FridgeproductService,\n    toastr: ToastrService,\n    private userService: UserService) {\n    this._service = service;\n    this._toastrService = toastr;\n   }  \n\n  ngOnInit() { \n    //this.today = ??? \n    this.fridgeId = parseInt(localStorage.getItem(\"fridgeId\"));\n    this._service.refreshList(this.fridgeId);\n    this.userService.getUserProfile().subscribe(\n      res => {\n        this.userDetails = res as UserDetail; \n      },\n      err => {\n        console.log(err);\n      },\n    );\n    this.isLoaded=true;\n  }\n\n  populateForm(pd:FridgeProduct){\n    this._service.formData = Object.assign({},pd);\n  }\n\n  onDelete(PMId){\n    if (confirm('Are you sure?')) {\n      this.isLoaded=false;\n      this._service.deleteFridgeProductDetail(PMId).subscribe(\n      res=>{ \n        this._toastrService.warning('Submitted (delete) successfully', 'FridgeProduct Detail Register');\n        this._service.refreshList(this.fridgeId);\n      },\n      err=>{\n        console.log(err);\n      }\n    )}\n    this.isLoaded=true;\n  }\n}\n","module.exports = \"<div class=\\\"wrapper\\\">\\n    <h1 class=\\\"display-4 text-center\\\">Fridge Product Detail Register</h1>\\n    <hr>\\n    <div clas=\\\"row\\\"></div>\\n    <div class=\\\"wrapped-div\\\"><br/>\\n      <app-fridge-product-detail></app-fridge-product-detail>\\n      </div><br/>\\n    <div class=\\\"wrapped-div\\\" style=\\\"width: 100%\\\">\\n      <app-fridge-product-list></app-fridge-product-list>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fridge-product',\n  templateUrl: './fridge-product.component.html',\n  styles: []\n})\nexport class FridgeProductComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \" \\n<div class=\\\"wrapper\\\">\\n    <div class=\\\"wrapped-div\\\">\\n      <div class=\\\"tab-header\\\">\\n        <p class=\\\"text-center display-4\\\">You Open Fridge (Id={{fridgeId}})</p>\\n        <h2 routerLink='/home/open/fridgeproduct' routerLinkActive='active'>Products</h2>\\n        <h2 routerLink='/home/open/sticker' routerLinkActive='active'>Stickers</h2> \\n        <h2 routerLink='/home/open/cart' routerLinkActive='active'>Shopping Cart</h2> \\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-10 offset-md-1\\\">\\n          <router-outlet></router-outlet>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-open',\n  templateUrl: './open.component.html',\n  styles: []\n})\nexport class OpenComponent implements OnInit {\n \n  public fridgeId: number;\n  constructor( ) { }\n\n  ngOnInit() { \n    this.fridgeId = parseInt(localStorage.getItem(\"fridgeId\"));\n  }\n\n}\n","module.exports = \"<form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\n  <input type=\\\"hidden\\\" name=\\\"PMId\\\" [value]=\\\"_service.formData.Id\\\">  \\n  <div class=\\\"form-group\\\">\\n    <div class=\\\"input-group\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <div class=\\\"input-group-text bg-white\\\">\\n          <i class=\\\"fas fa-hamburger\\\" [class.green-icon]=\\\"Text.valid\\\" [class.red-icon]=\\\"Text.invalid && Text.touched\\\"></i>\\n        </div>\\n      </div> \\n      <input name=\\\"Text\\\" #Text=\\\"ngModel\\\" [(ngModel)]=\\\"_service.formData.Text\\\" class=\\\"form-control\\\"\\n        placeholder=\\\"Text...\\\" required maxlength=\\\"400\\\">\\n    </div>\\n  </div>  \\n    <div class=\\\"form-group\\\">\\n      <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\"><i class=\\\"fas fa-database\\\"></i> Submit Form Data</button>  \\n    </div> \\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { UserDetail } from 'src/app/models/UserDetail';\nimport { StickerService } from 'src/app/services/sticker.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-sticker-detail',\n  templateUrl: './sticker-detail.component.html',\n  styles: []\n})\nexport class StickerDetailComponent implements OnInit {\n\n  public fridgeId: number;\n  public userDetails: UserDetail; \n  public _service: StickerService;\n  private _toastrService: ToastrService;\n\n  constructor(private router: Router,\n    service: StickerService,\n    toastr: ToastrService,\n    private userService: UserService) {\n    this._service = service;\n    this._toastrService = toastr;\n   }  \n\n  ngOnInit() {\n    this.fridgeId = parseInt(localStorage.getItem(\"fridgeId\")); \n    this.userService.getUserProfile().subscribe(\n      res => {\n        this.userDetails = res as UserDetail; \n      },\n      err => {\n        console.log(err);\n      },\n    );\n  }\n\n  onSubmit(form: NgForm) {\n    if (this._service.formData.Id==0) this.insertRecord(form);  \n  } \n\n  insertRecord(form: NgForm){\n    this._service.postStickerDetail().subscribe(\n      res=>{ \n        this._toastrService.success('Submitted (post) successfully', 'Sticker Detail Register');\n        this._service.refreshList(this.fridgeId);\n      },\n      err=>{\n        console.log(err);\n      }\n    )\n  }  \n\n}\n","module.exports = \"<div *ngIf=\\\"isLoaded\\\">\\n    <table class=\\\"table wrapped-div\\\" style=\\\"width: 100%\\\">\\n      <thead>\\n        <th>Text</th>\\n        <th>DateAdd</th>\\n        <th>User</th> \\n      </thead>\\n      <tr *ngFor=\\\"let pd of _service.list\\\"> \\n        <td >{{pd.Text}}</td>\\n        <td >{{pd.DateAdd}}</td>\\n        <td >{{pd.User.FullName}}</td> \\n      </tr>\\n    </table>\\n  </div>\\n  <div *ngIf=\\\"!isLoaded\\\" class=\\\"text-center\\\">\\n    <img src=\\\"https://upload.wikimedia.org/wikipedia/commons/a/a3/Lightness_rotate_36f_cw.gif\\\" style=\\\"max-height: 70px; max-width: 70px\\\"/>\\n  </div>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { UserDetail } from 'src/app/models/UserDetail';\nimport { StickerService } from 'src/app/services/sticker.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\nimport { Sticker } from 'src/app/models/Sticker';\n\n@Component({\n  selector: 'app-sticker-list',\n  templateUrl: './sticker-list.component.html',\n  styles: []\n})\nexport class StickerListComponent implements OnInit {\n\n  public fridgeId: number;\n  public isLoaded: boolean = false;\n  public userDetails: UserDetail; \n  public _service: StickerService;\n  private _toastrService: ToastrService;\n\n  constructor(private router: Router,\n    service: StickerService,\n    toastr: ToastrService,\n    private userService: UserService) {\n    this._service = service;\n    this._toastrService = toastr;\n   }  \n\n  ngOnInit() { \n    this.fridgeId = parseInt(localStorage.getItem(\"fridgeId\"));\n    this._service.refreshList(this.fridgeId);\n    this.userService.getUserProfile().subscribe(\n      res => {\n        this.userDetails = res as UserDetail; \n      },\n      err => {\n        console.log(err);\n      },\n    );\n    this.isLoaded=true;\n  }  \n}\n","module.exports = \"<div class=\\\"wrapper\\\">\\n    <h1 class=\\\"display-4 text-center\\\">Sticker Detail Register</h1>\\n    <hr>\\n    <div clas=\\\"row\\\"></div>\\n    <div class=\\\"wrapped-div\\\"><br/>\\n      <app-sticker-detail></app-sticker-detail>\\n      </div><br/>\\n    <div class=\\\"wrapped-div\\\" style=\\\"width: 100%\\\">\\n      <app-sticker-list></app-sticker-list>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sticker',\n  templateUrl: './sticker.component.html',\n  styles: []\n})\nexport class StickerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\"> \\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <div class=\\\"input-group-text bg-white\\\">\\n            <i class=\\\"fas fa-hamburger\\\" [class.green-icon]=\\\"Name.valid\\\" [class.red-icon]=\\\"Name.invalid && Name.touched\\\"></i>\\n          </div>\\n        </div>\\n        <input name=\\\"Name\\\" #Name=\\\"ngModel\\\" [(ngModel)]=\\\"_service.formData.Name\\\" class=\\\"form-control\\\"\\n          placeholder=\\\"Name...\\\" required maxlength=\\\"400\\\">\\n      </div>\\n    </div> \\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <div class=\\\"input-group-text bg-white\\\">\\n              <i class=\\\"fas fa-key\\\"  [class.green-icon]=\\\"PasswordHash.valid\\\" [class.red-icon]=\\\"PasswordHash.invalid && PasswordHash.touched\\\"></i>\\n            </div>\\n          </div>\\n          <input type=\\\"password\\\" name=\\\"PasswordHash\\\" #PasswordHash=\\\"ngModel\\\" [(ngModel)]=\\\"_service.formData.PasswordHash\\\" class=\\\"form-control\\\" \\n            placeholder=\\\"PasswordHash...\\\" required >\\n        </div>\\n      </div> \\n    <div>\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\"><i class=\\\"fas fa-database\\\"></i> Get Access For Already Exist Fridge</button> \\n        <button class=\\\"btn btn-lg btn-block\\\" type=\\\"button\\\" (onClick)=\\\"resetForm(form)\\\" style=\\\"background-color: slategray; border-radius: 20px; color:#ffff\\\"><i class=\\\"fas fa-database\\\"></i> Clear</button>\\n      </div>\\n    </div>\\n  </form>\"","import { Component, OnInit } from '@angular/core';\nimport { UserDetail } from 'src/app/models/UserDetail';\nimport { FridgeService } from 'src/app/services/fridge.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\nimport { NgForm } from '@angular/forms';\nimport { UserfridgeService } from 'src/app/services/userfridge.service';\n\n@Component({\n  selector: 'app-user-fridge-add',\n  templateUrl: './user-fridge-add.component.html',\n  styles: []\n})\nexport class UserFridgeAddComponent implements OnInit {\n\n  public userDetails: UserDetail; \n  public _service: UserfridgeService;\n  private _toastrService: ToastrService;\n\n  constructor(private router: Router,\n    service: UserfridgeService,\n    toastr: ToastrService,\n    private userService: UserService) {\n    this._service = service;\n    this._toastrService = toastr;\n   }  \n\n  ngOnInit() {\n    this.resetForm();\n    this.userService.getUserProfile().subscribe(\n      res => {\n        this.userDetails = res as UserDetail; \n      },\n      err => {\n        console.log(err);\n      },\n    );\n  }\n\n  onSubmit(form: NgForm) {\n    this.insertRecord(form);  \n  } \n\n  insertRecord(form: NgForm){\n    this._service.postUserFridgeDetail().subscribe(\n      res=>{\n        this.resetForm(form);\n        this._toastrService.success('Submitted (post) successfully', 'Fridge Detail Register'); \n      },\n      err=>{\n        if (err)\n        console.log(err);\n        this._toastrService.error('Submitted (post) error', 'Fridge Detail Register'); \n      }\n    )\n  } \n\n  resetForm(form?:NgForm){\n    if (form!=null) form.resetForm();\n    this._service.resetForm();\n  }\n\n\n}","module.exports = \"<form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\n    <input type=\\\"hidden\\\" name=\\\"PMId\\\" [value]=\\\"_service.formData.Id\\\">\\n    <input type=\\\"hidden\\\" name=\\\"PMId\\\" [value]=\\\"_service.formData.Stickers\\\">\\n    <input type=\\\"hidden\\\" name=\\\"PMId\\\" [value]=\\\"_service.formData.FridgeProducts\\\"> \\n    <input type=\\\"hidden\\\" name=\\\"PMId\\\" [value]=\\\"_service.formData.Users\\\"> \\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <div class=\\\"input-group-text bg-white\\\">\\n            <i class=\\\"fas fa-hamburger\\\" [class.green-icon]=\\\"Name.valid\\\" [class.red-icon]=\\\"Name.invalid && Name.touched\\\"></i>\\n          </div>\\n        </div>\\n        <input name=\\\"Name\\\" #Name=\\\"ngModel\\\" [(ngModel)]=\\\"_service.formData.Name\\\" class=\\\"form-control\\\"\\n          placeholder=\\\"Name...\\\" required maxlength=\\\"400\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <div class=\\\"input-group-text bg-white\\\">\\n            <i class=\\\"fas fa-align-center\\\" [class.green-icon]=\\\"Description.valid\\\" [class.red-icon]=\\\"Description.invalid && Description.touched\\\"></i>\\n          </div>\\n        </div>\\n        <input name=\\\"Description\\\" #Description=\\\"ngModel\\\" [(ngModel)]=\\\"_service.formData.Description\\\" \\n        class=\\\"form-control\\\" placeholder=\\\"Description...\\\" required maxlength=\\\"400\\\">\\n      </div>\\n    </div>  \\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <div class=\\\"input-group-text bg-white\\\">\\n              <i class=\\\"fas fa-key\\\"  [class.green-icon]=\\\"PasswordHash.valid\\\" [class.red-icon]=\\\"PasswordHash.invalid && PasswordHash.touched\\\"></i>\\n            </div>\\n          </div>\\n          <input type=\\\"password\\\" name=\\\"PasswordHash\\\" #PasswordHash=\\\"ngModel\\\" [(ngModel)]=\\\"_service.formData.PasswordHash\\\" class=\\\"form-control\\\" \\n            placeholder=\\\"PasswordHash...\\\" required >\\n        </div>\\n      </div> \\n    <div>\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\"><i class=\\\"fas fa-database\\\"></i> Submit Form Data</button> \\n        <button class=\\\"btn btn-lg btn-block\\\" type=\\\"button\\\" (onClick)=\\\"resetForm(form)\\\" style=\\\"background-color: slategray; border-radius: 20px; color:#ffff\\\"><i class=\\\"fas fa-database\\\"></i> Clear</button>\\n      </div>\\n    </div>\\n  </form>\"","import { Component, OnInit } from '@angular/core';\nimport { UserDetail } from 'src/app/models/UserDetail';\nimport { FridgeService } from 'src/app/services/fridge.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-user-fridge-detail',\n  templateUrl: './user-fridge-detail.component.html',\n  styles: []\n})\nexport class UserFridgeDetailComponent implements OnInit {\n\n  public userDetails: UserDetail; \n  public _service: FridgeService;\n  private _toastrService: ToastrService;\n\n  constructor(private router: Router,\n    service: FridgeService,\n    toastr: ToastrService,\n    private userService: UserService) {\n    this._service = service;\n    this._toastrService = toastr;\n   }  \n\n  ngOnInit() {\n    this.resetForm();\n    this.userService.getUserProfile().subscribe(\n      res => {\n        this.userDetails = res as UserDetail; \n      },\n      err => {\n        console.log(err);\n      },\n    );\n  }\n\n  onSubmit(form: NgForm) {\n    if (this._service.formData.Id==0) this.insertRecord(form);  \n    else this.updateRecord(form);\n  } \n\n  insertRecord(form: NgForm){\n    this._service.postFridgeDetail().subscribe(\n      res=>{\n        this.resetForm(form);\n        this._toastrService.success('Submitted (post) successfully', 'Fridge Detail Register');\n        this._service.refreshList();\n      },\n      err=>{\n        console.log(err);\n      }\n    )\n  }\n\n  updateRecord(form: NgForm){\n    this._service.putFridgeDetail().subscribe(\n      res=>{\n        this.resetForm(form);\n        this._toastrService.info('Submitted (put) successfully', 'Fridge Detail Register');\n        this._service.refreshList();\n      },\n      err=>{\n        console.log(err);\n      }\n    )\n  }\n\n  resetForm(form?:NgForm){\n    if (form!=null) form.resetForm();\n    this._service.resetForm();\n  }\n\n\n}\n","module.exports = \"<div *ngIf=\\\"isLoaded\\\">\\n    <table class=\\\"table wrapped-div\\\" style=\\\"width: 100%\\\">\\n      <thead> \\n        <th>Name</th>\\n        <th>Description</th>\\n        <th>DateCreate</th>\\n        <th>Owners</th> \\n        <th><i class=\\\"fas fa-cogs\\\"></i></th>\\n      </thead>\\n      <tr *ngFor=\\\"let pd of _service.list\\\"> \\n        <td (click)=\\\"populateForm(pd)\\\">{{pd.Name}}</td>\\n        <td (click)=\\\"populateForm(pd)\\\">{{pd.Description}}</td>\\n        <td (click)=\\\"populateForm(pd)\\\">{{pd.DateCreate}}</td>\\n        <td (click)=\\\"populateForm(pd)\\\">\\n          <p *ngFor=\\\"let user of pd.Users\\\">{{user.Fullname}}</p>\\n        </td> \\n        <td>\\n          <i class=\\\"far fa-trash-alt fa-lg text-danger\\\" (click)=\\\"onDelete(pd.Id)\\\"></i> | <i class=\\\"fas fa-door-open \\\" (click)=\\\"onOpen(pd.Id)\\\"></i>\\n        </td>\\n      </tr>\\n    </table>\\n  </div>\\n  <div *ngIf=\\\"!isLoaded\\\" class=\\\"text-center\\\">\\n    <img src=\\\"https://upload.wikimedia.org/wikipedia/commons/a/a3/Lightness_rotate_36f_cw.gif\\\" style=\\\"max-height: 70px; max-width: 70px\\\"/>\\n  </div>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { UserDetail } from 'src/app/models/UserDetail';\nimport { FridgeService } from 'src/app/services/fridge.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\nimport { Fridge } from 'src/app/models/Fridge';\nimport { UserfridgeService } from 'src/app/services/userfridge.service';\n\n@Component({\n  selector: 'app-user-fridge-list',\n  templateUrl: './user-fridge-list.component.html',\n  styles: []\n})\nexport class UserFridgeListComponent implements OnInit {\n\n  public isLoaded: boolean = false;\n  public userDetails: UserDetail; \n  public _service: FridgeService;\n  public _serviceUserFridge: UserfridgeService;\n  private _toastrService: ToastrService;\n\n  constructor(private router: Router,\n    service: FridgeService,\n    service2: UserfridgeService,\n    toastr: ToastrService,\n    private userService: UserService) {\n    this._service = service;\n    this._serviceUserFridge = service2;\n    this._toastrService = toastr;\n   }  \n\n  ngOnInit() { \n    this._service.refreshList();\n    this.userService.getUserProfile().subscribe(\n      res => {\n        this.userDetails = res as UserDetail; \n      },\n      err => {\n        console.log(err);\n      },\n    );\n    this.isLoaded=true;\n  }\n\n  populateForm(pd:Fridge){\n    this._service.formData = Object.assign({},pd);\n  }\n\n  onDelete(Id){\n    if (confirm('Are you sure?')) {\n      this.isLoaded=false;\n      this._serviceUserFridge.deleteUserFridgeDetail(Id).subscribe(\n      res=>{ \n        this._toastrService.warning('Submitted (delete) successfully', 'Fridge Detail Register');\n        this._service.refreshList();\n      },\n      err=>{\n        console.log(err);\n      }\n    )}\n    this.isLoaded=true;\n  }\n  \n  onOpen(Id){\n    localStorage.setItem(\"fridgeId\",Id);\n    this.router.navigate(['/home/open']);\n  }\n}\n","module.exports = \"<div class=\\\"wrapper\\\">\\n    <h1 class=\\\"display-4 text-center\\\">Fridge Detail Register</h1>\\n    <hr>\\n    <div clas=\\\"row\\\"></div>\\n    <div class=\\\"wrapped-div\\\"><br/>\\n      <app-user-fridge-add></app-user-fridge-add>\\n      </div><br/>\\n    <div class=\\\"wrapped-div\\\"><br/>\\n      <app-user-fridge-detail></app-user-fridge-detail>\\n      </div><br/>\\n    <div class=\\\"wrapped-div\\\" style=\\\"width: 100%\\\">\\n      <app-user-fridge-list></app-user-fridge-list>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-fridge',\n  templateUrl: './user-fridge.component.html',\n  styles: []\n})\nexport class UserFridgeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"wrapper\\\">\\n    <h1 class=\\\"display-4 text-center\\\">User Detail Register</h1>\\n    <hr>\\n    <div clas=\\\"row\\\"></div>\\n    <div class=\\\"card m-5 text-center\\\" style=\\\"width:24rem\\\" *ngIf=\\\"userDetails\\\">\\n        <ul class=\\\"list-group\\\">\\n          <li class=\\\"list-group-item\\\"><strong>Id : </strong>{{userDetails.Id}}</li>\\n          <li class=\\\"list-group-item\\\"><strong>FullName : </strong>{{userDetails.FullName}}</li>\\n          <li class=\\\"list-group-item\\\"><strong>Email : </strong>{{userDetails.Email}}</li>\\n          <li class=\\\"list-group-item\\\"><strong>Role : </strong>{{userDetails.Role}}</li> \\n        </ul>\\n      </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserDetail } from 'src/app/models/UserDetail';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-user-page',\n  templateUrl: './user-page.component.html',\n  styles: []\n})\nexport class UserPageComponent implements OnInit {\n\n  userDetails: UserDetail; \n  isAdmin = false;\n\n  constructor(private router: Router, private service: UserService) { }\n\n  ngOnInit() {\n    //this.userDetails = localStorage.getItem('currentUser');\n    this.service.getUserProfile().subscribe(\n      res => {\n        this.userDetails = res as UserDetail; \n      });\n  } \n}\n","module.exports = \" \\n<div class=\\\"wrapper\\\">\\n  <div class=\\\"wrapped-div\\\">\\n    <div class=\\\"tab-header\\\">\\n      <h2 routerLink='/home/user/page' routerLinkActive='active'>My Page</h2>\\n      <h2 routerLink='/home/user/product' routerLinkActive='active'>My Products</h2>\\n      <h2 routerLink='/home/user/fridge' routerLinkActive='active'>My Fridges</h2>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-10 offset-md-1\\\">\\n        <router-outlet></router-outlet>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-panel',\n  templateUrl: './user-panel.component.html',\n  styles: []\n})\nexport class UserPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<form #form=\\\"ngForm\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\n    <input type=\\\"hidden\\\" name=\\\"PMId\\\" [value]=\\\"_service.formData.Id\\\">\\n    <input type=\\\"hidden\\\" name=\\\"PMId\\\" [value]=\\\"_service.formData.ProdInfo.Id\\\">\\n    <input type=\\\"hidden\\\" name=\\\"PMId\\\" [value]=\\\"_service.formData.User\\\"> \\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <div class=\\\"input-group-text bg-white\\\">\\n            <i class=\\\"fas fa-hamburger\\\" [class.green-icon]=\\\"Name.valid\\\" [class.red-icon]=\\\"Name.invalid && Name.touched\\\"></i>\\n          </div>\\n        </div>\\n        <input name=\\\"Name\\\" #Name=\\\"ngModel\\\" [(ngModel)]=\\\"_service.formData.Name\\\" class=\\\"form-control\\\"\\n          placeholder=\\\"Name...\\\" required maxlength=\\\"400\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <div class=\\\"input-group-text bg-white\\\">\\n            <i class=\\\"fas fa-align-center\\\" [class.green-icon]=\\\"Description.valid\\\" [class.red-icon]=\\\"Description.invalid && Description.touched\\\"></i>\\n          </div>\\n        </div>\\n        <input name=\\\"Description\\\" #Description=\\\"ngModel\\\" [(ngModel)]=\\\"_service.formData.Description\\\" \\n        class=\\\"form-control\\\" placeholder=\\\"Description...\\\" required maxlength=\\\"400\\\">\\n      </div>\\n    </div>\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <div class=\\\"input-group-text bg-white\\\">\\n              <i class=\\\"fas fa-image\\\" [class.green-icon]=\\\"ImgURL.valid\\\" [class.red-icon]=\\\"ImgURL.invalid && ImgURL.touched\\\"></i>\\n            </div>\\n          </div>\\n          <input name=\\\"ImgURL\\\" #ImgURL=\\\"ngModel\\\" [(ngModel)]=\\\"_service.formData.ImgURL\\\" class=\\\"form-control\\\"\\n            placeholder=\\\"ImgURL...\\\" maxlength=256>\\n            <div>\\n                <img *ngIf=\\\"_service.formData.ImgURL==''\\\" src=\\\"https://www.diamondbathrooms.com/sites/default/files/default_images/no_image_available.png\\\" style=\\\"max-height: 38px; max-width: 38px\\\"/>\\n                <img *ngIf=\\\"_service.formData.ImgURL!=''\\\" src=\\\"{{_service.formData.ImgURL}}\\\" style=\\\"max-height: 38px; max-width: 38px\\\"/>\\n            </div> \\n        </div>\\n      </div>\\n    <div class=\\\"form-row\\\">\\n      <div class=\\\"form-group col-md-3\\\">\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <div class=\\\"input-group-text bg-white\\\">\\n              <i class=\\\"fas fa-fire-alt\\\"  [class.green-icon]=\\\"Fat.valid\\\" [class.red-icon]=\\\"Fat.invalid && Fat.touched\\\"></i>\\n            </div>\\n          </div>\\n          <input name=\\\"Fat\\\" #Fat=\\\"ngModel\\\" [(ngModel)]=\\\"_service.formData.ProdInfo.Fat\\\" class=\\\"form-control\\\" \\n            placeholder=\\\"Fat...\\\" required >\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col-md-3\\\">\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <div class=\\\"input-group-text bg-white\\\">\\n              <i class=\\\"fas fa-key\\\"  [class.green-icon]=\\\"Carb.valid\\\" [class.red-icon]=\\\"Carb.invalid && Carb.touched\\\"></i>\\n            </div>\\n          </div>\\n          <input name=\\\"Carb\\\" #Carb=\\\"ngModel\\\" [(ngModel)]=\\\"_service.formData.ProdInfo.Carb\\\" class=\\\"form-control\\\" \\n            placeholder=\\\"Carb...\\\" required >\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col-md-3\\\">\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <div class=\\\"input-group-text bg-white\\\">\\n              <i class=\\\"fas fa-key\\\"  [class.green-icon]=\\\"Protein.valid\\\" [class.red-icon]=\\\"Protein.invalid && Protein.touched\\\"></i>\\n            </div>\\n          </div>\\n          <input name=\\\"Protein\\\" #Protein=\\\"ngModel\\\" [(ngModel)]=\\\"_service.formData.ProdInfo.Protein\\\" class=\\\"form-control\\\" \\n            placeholder=\\\"Protein...\\\" required >\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col-md-3\\\">\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <div class=\\\"input-group-text bg-white\\\">\\n              <i class=\\\"fas fa-key\\\"  [class.green-icon]=\\\"Kkal.valid\\\" [class.red-icon]=\\\"Kkal.invalid && Kkal.touched\\\"></i>\\n            </div>\\n          </div>\\n          <input name=\\\"Kkal\\\" #Kkal=\\\"ngModel\\\" [(ngModel)]=\\\"_service.formData.ProdInfo.Kkal\\\" class=\\\"form-control\\\" \\n            placeholder=\\\"Carb...\\\" required >\\n        </div>\\n      </div>\\n    </div>\\n    <div>\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\"><i class=\\\"fas fa-database\\\"></i> Submit Form Data</button> \\n        <button class=\\\"btn btn-lg btn-block\\\" type=\\\"button\\\" (onClick)=\\\"resetForm(form)\\\" style=\\\"background-color: slategray; border-radius: 20px; color:#ffff\\\"><i class=\\\"fas fa-database\\\"></i> Clear</button>\\n      </div>\\n    </div>\\n  </form>\"","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from 'src/app/services/product.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { UserDetail } from 'src/app/models/UserDetail';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-user-product-detail',\n  templateUrl: './user-product-detail.component.html',\n  styles: []\n})\nexport class UserProductDetailComponent implements OnInit {\n  \n  public userDetails: UserDetail; \n  public _service: ProductService;\n  private _toastrService: ToastrService;\n\n  constructor(private router: Router,\n    service: ProductService,\n    toastr: ToastrService,\n    private userService: UserService) {\n    this._service = service;\n    this._toastrService = toastr;\n   }  \n\n  ngOnInit() {\n    this.resetForm();\n    this.userService.getUserProfile().subscribe(\n      res => {\n        this.userDetails = res as UserDetail; \n      },\n      err => {\n        console.log(err);\n      },\n    );\n  }\n\n  onSubmit(form: NgForm) {\n    if (this._service.formData.Id==0) this.insertRecord(form);  \n    else this.updateRecord(form);\n  } \n\n  insertRecord(form: NgForm){\n    this._service.postProductDetail().subscribe(\n      res=>{\n        this.resetForm(form);\n        this._toastrService.success('Submitted (post) successfully', 'Product Detail Register');\n        this._service.refreshList();\n      },\n      err=>{\n        console.log(err);\n      }\n    )\n  }\n\n  updateRecord(form: NgForm){\n    this._service.putProductDetail().subscribe(\n      res=>{\n        this.resetForm(form);\n        this._toastrService.info('Submitted (put) successfully', 'Product Detail Register');\n        this._service.refreshList();\n      },\n      err=>{\n        console.log(err);\n      }\n    )\n  }\n\n  resetForm(form?:NgForm){\n    if (form!=null) form.resetForm();\n    this._service.resetForm();\n  }\n\n\n}\n","module.exports = \"<div *ngIf=\\\"isLoaded\\\">\\n  <table class=\\\"table wrapped-div\\\" style=\\\"width: 100%\\\">\\n    <thead>\\n      <th>Image</th>\\n      <th>Name</th>\\n      <th>Description</th>\\n      <th>p/f/c</th>\\n      <th>Kkal</th>\\n      <th><i class=\\\"fas fa-cogs\\\"></i></th>\\n    </thead>\\n    <tr *ngFor=\\\"let pd of _service.list\\\">\\n      <td (click)=\\\"populateForm(pd)\\\">      \\n          <img *ngIf=\\\"pd.ImgURL==''\\\" src=\\\"https://www.diamondbathrooms.com/sites/default/files/default_images/no_image_available.png\\\" style=\\\"max-height: 75px; max-width: 75px; opacity:0.3\\\"/>\\n          <img *ngIf=\\\"pd.ImgURL!=''\\\" src=\\\"{{pd.ImgURL}}\\\" style=\\\"max-height: 75px; max-width: 75px\\\"></td>\\n      <td (click)=\\\"populateForm(pd)\\\">{{pd.Name}}</td>\\n      <td (click)=\\\"populateForm(pd)\\\">{{pd.Description}}</td>\\n      <td (click)=\\\"populateForm(pd)\\\">{{pd.ProdInfo.Protein}} / {{pd.ProdInfo.Fat}} / {{pd.ProdInfo.Carb}} </td>\\n      <td (click)=\\\"populateForm(pd)\\\">{{pd.ProdInfo.Kkal}}</td>\\n      <td>\\n        <i *ngIf=\\\"pd.User.Id==userDetails.Id\\\" class=\\\"far fa-trash-alt fa-lg text-danger\\\" (click)=\\\"onDelete(pd.Id)\\\"></i>\\n        <i *ngIf=\\\"pd.User.Id!=userDetails.Id\\\" class=\\\"far fa-trash-alt fa-lg text-danger\\\" style=\\\"opacity: 0.3\\\"></i>\\n      </td>\\n    </tr>\\n  </table>\\n</div>\\n<div *ngIf=\\\"!isLoaded\\\" class=\\\"text-center\\\">\\n  <img src=\\\"https://upload.wikimedia.org/wikipedia/commons/a/a3/Lightness_rotate_36f_cw.gif\\\" style=\\\"max-height: 70px; max-width: 70px\\\"/>\\n</div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { ProductService } from 'src/app/services/product.service';\nimport { Router } from '@angular/router';\nimport { Product } from 'src/app/models/Product';\nimport { UserDetail } from 'src/app/models/UserDetail';\nimport { UserService } from 'src/app/services/user.service';\n// import { DataTableDirective } from 'angular-datatables';\n// import { Subject } from 'rxjs/Subject';\n\n//import 'rxjs/add/operator/map';\n\n\n@Component({\n  selector: 'app-user-product-list',\n  templateUrl: './user-product-list.component.html',\n  styles: []\n})\nexport class UserProductListComponent implements OnInit {\n\n  //@ViewChild(DataTableDirective) dtElement: DataTableDirective;\n  //dtOptions: DataTables.Settings = {};\n  //dtTrigger: Subject<any> = new Subject();\n\n\n  public isLoaded: boolean = false;\n  public userDetails: UserDetail; \n  public _service: ProductService;\n  private _toastrService: ToastrService;\n\n  constructor(private router: Router,\n    service: ProductService,\n    toastr: ToastrService,\n    private userService: UserService) {\n\n    this._service = service;\n    this._toastrService = toastr;\n\n   // this.dtOptions = {\n   //   pagingType: 'full_numbers',\n   //   pageLength: 5,\n   //   paging: true\n   // };\n\n    //this.dtTrigger.next();\n\n   }  \n\n  ngOnInit() { \n\n   // this.dtElement.dtInstance.then(async (dtInstance: DataTables.Api) => {\n  //    dtInstance.destroy(); \n  //    this._service.refreshList();\n  //    this.dtTrigger.next();\n  //  });\n\n    this.userService.getUserProfile().subscribe(\n      res => {\n        this.userDetails = res as UserDetail; \n      },\n      err => {\n        console.log(err);\n      },\n    );\n    this.isLoaded=true; \n  }\n\n  populateForm(pd:Product){\n    this._service.formData = Object.assign({},pd);\n   // this.dtTrigger.next();\n\n  }\n\n  onDelete(PMId){\n    if (confirm('Are you sure?')) {\n      this.isLoaded=false;\n      this._service.deleteProductDetail(PMId).subscribe(\n      res=>{ \n        this._toastrService.warning('Submitted (delete) successfully', 'Product Detail Register');\n      //  this.dtElement.dtInstance.then(async (dtInstance: DataTables.Api) => {\n      //    dtInstance.destroy(); \n      //    this._service.refreshList();\n      //    this.dtTrigger.next();\n     //   });\n\n      },\n      err=>{\n        console.log(err);\n      }\n    )}\n    this.isLoaded=true;\n   // this.dtTrigger.next(); \n  }\n}\n","module.exports = \"<div class=\\\"wrapper\\\">\\n  <h1 class=\\\"display-4 text-center\\\">Product Detail Register</h1>\\n  <hr>\\n  <div clas=\\\"row\\\"></div>\\n  <div class=\\\"wrapped-div\\\"><br/>\\n    <app-user-product-detail></app-user-product-detail>\\n    </div><br/>\\n  <div class=\\\"wrapped-div\\\" style=\\\"width: 100%\\\">\\n    <app-user-product-list></app-user-product-list>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-product',\n  templateUrl: './user-product.component.html',\n  styles: []\n})\nexport class UserProductComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Cart } from '../models/Cart';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n  private _http: HttpClient;\r\n  public formData: Cart;\r\n  readonly rootURL = 'http://localhost:8491/api';\r\n  list: Cart[];\r\n  \r\n   constructor(private fb: FormBuilder,private http:HttpClient) { \r\n     this._http=http;\r\n   }\r\n \r\n postCartDetail(){\r\n   return this._http.post(this.rootURL+'/cart', this.formData);\r\n } \r\n \r\n putCartDetail(){\r\n   return this._http.put(this.rootURL+'/cart?id='+ this.formData.Id, this.formData);\r\n } \r\n \r\n deleteCartDetail(id){\r\n   return this._http.delete(this.rootURL+'/cart?id='+ id);\r\n } \r\n \r\n refreshList(id){  //fridge_id\r\n   this._http.get(this.rootURL+'/cart/fridge?id='+id)\r\n   .toPromise()\r\n   .then(res=> this.list = res as Cart[]);\r\n }\r\n\r\n resetForm(){\r\n    this.formData = {\r\n      Id:0,\r\n      Amount: 0,\r\n      Description: '',\r\n      EI: '',   \r\n      Fridge: {\r\n        Id:0,\r\n        Name: '',\r\n        Description: '',\r\n        PasswordHash: '',\r\n        DateCreate: new Date(),\r\n        Stickers: null,\r\n        FridgeProducts: null,\r\n        Users: null\r\n      },\r\n      Product: {\r\n        Id:0,\r\n        Name: '',\r\n        Description: '',\r\n        ImgURL: '',\r\n        ProdInfo: {\r\n          Id:0,\r\n          Fat: 0,\r\n          Carb: 0,\r\n          Protein: 0,\r\n          Kkal: 0\r\n        },\r\n        User: {\r\n          Id: '',\r\n          FullName: '',\r\n          Email: '',\r\n          Password: '',\r\n          Role: ''\r\n      }\r\n      },\r\n      User: {\r\n        Id:'',\r\n        FullName: '',\r\n        Email: '',\r\n        Password: '',\r\n        Role: ''\r\n     } \r\n    };\r\n  }\r\n  }\r\n  ","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Fridge } from '../models/Fridge';\nimport { AddFridge } from '../models/AddFridge';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { Sticker } from '../models/Sticker';\nimport { FridgeProduct } from '../models/FridgeProduct';\nimport { UserDetail } from '../models/UserDetail';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FridgeService {\n  private _http: HttpClient;\n  public formData: Fridge; \n  readonly rootURL = 'http://localhost:8491/api';\n  list: Fridge[];\n  \n   constructor(private fb: FormBuilder,private http:HttpClient) { \n     this._http=http;\n   }   \n \n postFridgeDetail(){\n   return this._http.post(this.rootURL+'/fridge', this.formData);\n } \n \n putFridgeDetail(){\n   return this._http.put(this.rootURL+'/fridge?id='+ this.formData.Id, this.formData);\n } \n \n deleteFridgeDetail(id){\n   return this._http.delete(this.rootURL+'/fridge?id='+ id);\n } \n \n refreshList(){\n   this._http.get(this.rootURL+'/fridge/user')\n   .toPromise()\n   .then(res=> this.list = res as Fridge[]);\n } \n \n refreshListGeneral(){\n  this._http.get(this.rootURL+'/fridge/general')\n  .toPromise()\n  .then(res=> this.list = res as Fridge[]);\n}\n \n resetForm(){\n    this.formData = {\n      Id:0,\n      Name: '',\n      Description: '',\n      PasswordHash: '',\n      DateCreate: new Date(),\n      Stickers: null,\n      FridgeProducts: null,\n      Users: null\n    }; \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FridgeProduct } from '../models/FridgeProduct';\nimport { FormBuilder} from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FridgeproductService {\n  private _http: HttpClient;\n  public formData: FridgeProduct;\n  readonly rootURL = 'http://localhost:8491/api';\n  list: FridgeProduct[];\n  \n   constructor(private fb: FormBuilder,private http:HttpClient) { \n     this._http=http;\n   }\n \n postFridgeProductDetail(){\n   return this._http.post(this.rootURL+'/fridgeproduct', this.formData);\n } \n \n putFridgeProductDetail(){\n   return this._http.put(this.rootURL+'/fridgeproduct?id='+ this.formData.Id, this.formData);\n } \n \n deleteFridgeProductDetail(id){\n   return this._http.delete(this.rootURL+'/fridgeproduct?id='+ id);\n } \n \n refreshList(id){  //fridge_id\n   this._http.get(this.rootURL+'/fridgeproduct/fridge?id='+id)\n   .toPromise()\n   .then(res=> this.list = res as FridgeProduct[]);\n }\n \n resetForm(){\n  this.formData = {\n    Id:0,\n    Amount: 0,\n    Description: '',\n    EI: '',\n    Price: 0,\n    DateBuy: new Date(),\n    DateValid: new Date(),\n    Fridge: {\n      Id:0,\n      Name: '',\n      Description: '',\n      PasswordHash: '',\n      DateCreate: new Date(),\n      Stickers: null,\n      FridgeProducts: null,\n      Users: null\n    },\n    Product: {\n      Id:0,\n      Name: '',\n      Description: '',\n      ImgURL: '',\n      ProdInfo: {\n        Id:0,\n        Fat: 0,\n        Carb: 0,\n        Protein: 0,\n        Kkal: 0\n      },\n      User: {\n        Id: '',\n        FullName: '',\n        Email: '',\n        Password: '',\n        Role: ''\n    }\n    },\n    User: {\n      Id:'',\n      FullName: '',\n      Email: '',\n      Password: '',\n      Role: ''\n   } \n  };\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Product } from '../models/Product';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  private _http: HttpClient;\n  public formData: Product;\n  readonly rootURL = 'http://localhost:8491/api';\n  list: Product[];\n  \n   constructor(private fb: FormBuilder,private http:HttpClient) { \n     this._http=http;\n   }\n \n postProductDetail(){\n   return this._http.post(this.rootURL+'/product', this.formData);\n } \n \n putProductDetail(){\n   return this._http.put(this.rootURL+'/product?id='+ this.formData.Id, this.formData);\n } \n \n deleteProductDetail(id){\n   return this._http.delete(this.rootURL+'/product?id='+ id);\n } \n \n refreshList(){\n   this._http.get(this.rootURL+'/product/user')\n   .toPromise()\n   .then(res=> this.list = res as Product[]);\n }\n\n refreshListGeneral(){\n   this._http.get(this.rootURL+'/product/general')\n   .toPromise()\n   .then(res=> this.list = res as Product[]);\n }\n \n resetForm(){\n  this.formData = {\n    Id:0,\n    Name: '',\n    Description: '',\n    ImgURL: '',\n    ProdInfo: {\n      Id:0,\n      Fat: 0,\n      Carb: 0,\n      Protein: 0,\n      Kkal: 0\n    },\n    User: {\n      Id: '',\n      FullName: '',\n      Email: '',\n      Password: '',\n      Role: ''\n  }\n  };    \n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Sticker } from '../models/Sticker';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StickerService {\n  private _http: HttpClient;\n  public formData: Sticker;\n  readonly rootURL = 'http://localhost:8491/api';\n  list: Sticker[];\n\n  // formModel = this.fb.group({\n  //   Text: ['', Validators.required]\n  // });\n  \n   constructor(private fb: FormBuilder,private http:HttpClient) { \n     this._http=http;\n   }\n \n postStickerDetail(){\n   return this._http.post(this.rootURL+'/sticker', this.formData);\n }   \n \n refreshList(id){  //fridge_id\n   this._http.get(this.rootURL+'/sticker/fridge?id='+id)\n   .toPromise()\n   .then(res=> this.list = res as Sticker[]);\n}\n}","import { Injectable } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { UserDetail } from '../models/UserDetail';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private fb: FormBuilder, private http: HttpClient) { }\n  readonly BaseURI = 'http://localhost:8491/api';\n  public formData: UserDetail;\n  list: UserDetail[];\n\n\n  // formModel1 = this.fb.group({\n  //   FullName: ['', Validators.required],\n  //   Email: ['', Validators.email], \n  //   Passwords: this.fb.group({\n  //     Password: ['', [Validators.required, Validators.minLength(4)]],\n  //     ConfirmPassword: ['', Validators.required]\n  //   }, { validator: this.comparePasswords })\n\n  // });\n\n  // comparePasswords(fb: FormGroup) {\n  //   let confirmPswrdCtrl = fb.get('ConfirmPassword');\n  //   //passwordMismatch\n  //   //confirmPswrdCtrl.errors={passwordMismatch:true}\n  //   if (confirmPswrdCtrl.errors == null || 'passwordMismatch' in confirmPswrdCtrl.errors) {\n  //     if (fb.get('Password').value != confirmPswrdCtrl.value)\n  //       confirmPswrdCtrl.setErrors({ passwordMismatch: true });\n  //     else\n  //       confirmPswrdCtrl.setErrors(null);\n  //   }\n  // }\n\n  register() {\n    // var body = {\n    //   FullName: this.formModel.value.FullName,\n    //   Email: this.formModel.value.Email, \n    //   Password: this.formModel.value.Passwords.Password\n    // };\n    return this.http.post(this.BaseURI + '/user/register', this.formData);\n  }\n\n  login(formData1) {\n    return this.http.post(this.BaseURI + '/user/login', formData1);\n  }\n  \n  getUserProfile() {\n    return this.http.get(this.BaseURI + '/userpage');\n  }\n\n  refreshList() {\n    this.http.get(this.BaseURI+'/user/general')\n   .toPromise()\n   .then(res=> this.list = res as UserDetail[]);\n  }\n\n  roleMatch(allowedRoles): boolean {\n    var isMatch = false;\n    var payLoad = JSON.parse(window.atob(localStorage.getItem('token').split('.')[1]));\n    var userRole = payLoad.role;\n    allowedRoles.forEach(element => {\n      if (userRole == element) {\n        isMatch = true; \n      }\n    });\n    return isMatch;\n  }\n\n  resetForm(){\n    this.formData = {\n       Id:'',\n       FullName: '',\n       Email: '',\n       Password: '',\n       Role: ''\n    };    \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AddFridge } from '../models/AddFridge';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserfridgeService {\n  private _http: HttpClient;\n  public formData: AddFridge; \n  readonly rootURL = 'http://localhost:8491/api'; \n  \n  // formModel = this.fb.group({\n  //   Name: ['', Validators.required], \n  //   Passwords: this.fb.group({\n  //     Password: ['', [Validators.required, Validators.minLength(4)]]})\n  // });\n  \n   constructor(private fb: FormBuilder,private http:HttpClient) { \n     this._http=http;\n   }   \n  \n postUserFridgeDetail(){\n  return this._http.post(this.rootURL+'/userfridge', this.formData);\n}  \n\ndeleteUserFridgeDetail(id){\n  return this._http.delete(this.rootURL+'/userfridge?id='+ id);  //fridge_id\n} \n\nresetForm(){\n  this.formData = { \n    Name: '',\n    PasswordHash: ''  \n  };    \n}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}